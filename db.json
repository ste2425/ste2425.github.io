{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/landscape/source/particles.json","path":"particles.json","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/particles.js","path":"js/particles.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"source/googlef0abcadd7db67e53.html","path":"googlef0abcadd7db67e53.html","modified":1,"renderable":0},{"_id":"source/images/PSPStock.png","path":"images/PSPStock.png","modified":1,"renderable":0},{"_id":"source/images/avatar.png","path":"images/avatar.png","modified":1,"renderable":0},{"_id":"source/images/batteryCharger.png","path":"images/batteryCharger.png","modified":1,"renderable":0},{"_id":"source/images/after-thumb.jpg","path":"images/after-thumb.jpg","modified":1,"renderable":0},{"_id":"source/images/after.jpg","path":"images/after.jpg","modified":1,"renderable":0},{"_id":"source/images/butwait.jpg","path":"images/butwait.jpg","modified":1,"renderable":0},{"_id":"source/images/before-thumb.jpg","path":"images/before-thumb.jpg","modified":1,"renderable":0},{"_id":"source/images/before.jpg","path":"images/before.jpg","modified":1,"renderable":0},{"_id":"source/images/cell.jpg","path":"images/cell.jpg","modified":1,"renderable":0},{"_id":"source/images/consolizer.jpg","path":"images/consolizer.jpg","modified":1,"renderable":0},{"_id":"source/images/cell-thumb.jpg","path":"images/cell-thumb.jpg","modified":1,"renderable":0},{"_id":"source/images/consolizer-thumb.jpg","path":"images/consolizer-thumb.jpg","modified":1,"renderable":0},{"_id":"source/images/previewImage.jpg","path":"images/previewImage.jpg","modified":1,"renderable":0},{"_id":"source/images/supercapacitor.png","path":"images/supercapacitor.png","modified":1,"renderable":0},{"_id":"source/images/wiring.png","path":"images/wiring.png","modified":1,"renderable":0},{"_id":"source/images/aboutme/pspInstaller-thumb.png","path":"images/aboutme/pspInstaller-thumb.png","modified":1,"renderable":0},{"_id":"source/images/aboutme/dotnetrunner-thumb.png","path":"images/aboutme/dotnetrunner-thumb.png","modified":1,"renderable":0},{"_id":"source/images/aboutme/dotnetrunner.png","path":"images/aboutme/dotnetrunner.png","modified":1,"renderable":0},{"_id":"source/images/aboutme/pspInstaller.png","path":"images/aboutme/pspInstaller.png","modified":1,"renderable":0},{"_id":"source/images/consolizer - making connections/analog.png","path":"images/consolizer - making connections/analog.png","modified":1,"renderable":0},{"_id":"source/images/consolizer - making connections/analog-thumb.png","path":"images/consolizer - making connections/analog-thumb.png","modified":1,"renderable":0},{"_id":"source/images/consolizer - making connections/middle-connector-thumb.png","path":"images/consolizer - making connections/middle-connector-thumb.png","modified":1,"renderable":0},{"_id":"source/images/consolizer - making connections/left-connector-thumb.png","path":"images/consolizer - making connections/left-connector-thumb.png","modified":1,"renderable":0},{"_id":"source/images/consolizer - making connections/left-connector.png","path":"images/consolizer - making connections/left-connector.png","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/back.JPG","path":"images/ds3-nopower/back.JPG","modified":1,"renderable":0},{"_id":"source/images/consolizer - making connections/middle-connector.png","path":"images/consolizer - making connections/middle-connector.png","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/IMG_4688.JPG","path":"images/ds3-nopower/IMG_4688.JPG","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/batteryswell.gif","path":"images/ds3-nopower/batteryswell.gif","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/charge.JPG","path":"images/ds3-nopower/charge.JPG","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/charging.JPG","path":"images/ds3-nopower/charging.JPG","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/dock-con.JPG","path":"images/ds3-nopower/dock-con.JPG","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/dock-connector.JPG","path":"images/ds3-nopower/dock-connector.JPG","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/dock.jpg","path":"images/ds3-nopower/dock.jpg","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/dock-open.jpg","path":"images/ds3-nopower/dock-open.jpg","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/repair.JPG","path":"images/ds3-nopower/repair.JPG","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/working.JPG","path":"images/ds3-nopower/working.JPG","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/ribbons.JPG","path":"images/ds3-nopower/ribbons.JPG","modified":1,"renderable":0},{"_id":"source/images/ds3-nopower/under-bat-cover.JPG","path":"images/ds3-nopower/under-bat-cover.JPG","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/adapter1.png","path":"images/fitting fpcs/adapter1.png","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/adapter2.png","path":"images/fitting fpcs/adapter2.png","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/adapter4.jpg","path":"images/fitting fpcs/adapter4.jpg","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/adapter3.jpg","path":"images/fitting fpcs/adapter3.jpg","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/customfpc1.jpg","path":"images/fitting fpcs/customfpc1.jpg","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/customfpc2.jpg","path":"images/fitting fpcs/customfpc2.jpg","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/finaldesign2.png","path":"images/fitting fpcs/finaldesign2.png","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/originalfpc.jpg","path":"images/fitting fpcs/originalfpc.jpg","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/customfpc3.jpg","path":"images/fitting fpcs/customfpc3.jpg","modified":1,"renderable":0},{"_id":"source/images/fitting fpcs/finaldesign1.jpg","path":"images/fitting fpcs/finaldesign1.jpg","modified":1,"renderable":0},{"_id":"source/images/vitadockaux/configureTool.png","path":"images/vitadockaux/configureTool.png","modified":1,"renderable":0},{"_id":"source/images/vitadockaux/configureAux.png","path":"images/vitadockaux/configureAux.png","modified":1,"renderable":0},{"_id":"source/images/vitadockaux/outputSelect.png","path":"images/vitadockaux/outputSelect.png","modified":1,"renderable":0},{"_id":"source/images/vitadockaux/enableAux.png","path":"images/vitadockaux/enableAux.png","modified":1,"renderable":0},{"_id":"source/images/vitadockaux/menulibre.png","path":"images/vitadockaux/menulibre.png","modified":1,"renderable":0},{"_id":"source/images/vitadockaux/inputSelect.png","path":"images/vitadockaux/inputSelect.png","modified":1,"renderable":0},{"_id":"source/images/vitadockaux/thumb.png","path":"images/vitadockaux/thumb.png","modified":1,"renderable":0},{"_id":"source/images/continuing-psp-consolizer/esp.jpg","path":"images/continuing-psp-consolizer/esp.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/googlef0abcadd7db67e53.html","hash":"17d4c2253105933d825c46b8f14353461d15abbb","modified":1673960732871},{"_id":"source/_drafts/PSP-Internal-Consolizer-On Hold.md","hash":"532f7d2c25e53b5ad38af00e08d7d77dd40f7d4a","modified":1680509263758},{"_id":"source/_drafts/project.md","hash":"0770814902bc525f0a9b47bac5720db6918eec6a","modified":1685692934128},{"_id":"source/about/index.md","hash":"67096783972a38d9ab6777469368d5a8e682169a","modified":1669988810484},{"_id":"source/_posts/3DS-no-power.md","hash":"62836d6c09c8f00381a25940799c8ccb8a0e0900","modified":1674656302414},{"_id":"source/_posts/PSP-Internal-Consolizer-Making-Connections.md","hash":"3f4436694ea50acfeb08497b36ce0b24196d3427","modified":1671740857531},{"_id":"source/_posts/VitaDock-Manually-Apply-Aux-Audio-Feature.md","hash":"560fb8fc4ae56d336a8acecd6d39f7281466c2cb","modified":1683924487841},{"_id":"source/_posts/PSP-Internal-Consolizer-Fitting-FPCs.md","hash":"5999e98631c5c8bda8409dedf8f2d1e047d6bc21","modified":1673346235959},{"_id":"source/_posts/psp-coin-cell.md","hash":"e33cbc876a4cd7e28694afd8473b98d9495187f1","modified":1670234008917},{"_id":"source/images/avatar.png","hash":"92e06eea98ad58728d04b3b2ca86198451813e81","modified":1642949569788},{"_id":"source/images/butwait.jpg","hash":"b8d509a54095a49caa528b5015a2738bfb96ca90","modified":1674560492227},{"_id":"source/images/consolizer-thumb.jpg","hash":"dc3cc59218af247d60cabe107f752affa89913c3","modified":1669927585090},{"_id":"source/images/wiring.png","hash":"52e784c158af0ae63bb00d756a46b984af9d5e94","modified":1670232909617},{"_id":"source/images/aboutme/pspInstaller-thumb.png","hash":"3a8e704ceaeb980625a43bc4954d70a6b83f9c57","modified":1669981848281},{"_id":"source/images/aboutme/dotnetrunner.png","hash":"a4e86125be2729f74b94a8cae226aaf981da2d64","modified":1669981983490},{"_id":"source/images/aboutme/dotnetrunner-thumb.png","hash":"48432a3d8b17d7ddf208b43c98ef27a69939b83a","modified":1669982040479},{"_id":"source/images/aboutme/pspInstaller.png","hash":"a742e32cc1d650a0414a136d86160ccb38efbd29","modified":1669981752430},{"_id":"source/images/consolizer - making connections/analog.png","hash":"850049db7db0073c4db93203dcc49ce74ac1110b","modified":1671739459621},{"_id":"source/images/consolizer - making connections/left-connector-thumb.png","hash":"3765688c73b543c3008ba7eb60c98d73a4400935","modified":1671738856151},{"_id":"source/images/consolizer - making connections/left-connector.png","hash":"3f0b42801b6a2164a09e72342ecade432c50df40","modified":1671738694810},{"_id":"source/images/consolizer - making connections/middle-connector-thumb.png","hash":"19c2cb159fd8ba28e8b11110ee8610ac62752f83","modified":1671738883723},{"_id":"source/images/consolizer - making connections/middle-connector.png","hash":"c5061ef7129b753e767d5343365d71a024ba762b","modified":1671738734896},{"_id":"source/images/fitting fpcs/adapter2.png","hash":"bbcf0330e747b7c0efcaf5128d33398c70c4a904","modified":1673343129710},{"_id":"source/images/fitting fpcs/adapter1.png","hash":"a2c1c577a5436f9898678bc56d640b58ac310834","modified":1673343117738},{"_id":"source/images/fitting fpcs/adapter4.jpg","hash":"8e68660ae65424ddf3d70d9cf9c342373d58e749","modified":1673343160763},{"_id":"source/images/fitting fpcs/adapter3.jpg","hash":"0b01126f470f461f9c0deeaaca2a0e6995bb8ee0","modified":1673343147817},{"_id":"source/images/fitting fpcs/customfpc1.jpg","hash":"a1dac67e532c117a6c9a0b151212af76ca01a7fd","modified":1673343605839},{"_id":"source/images/fitting fpcs/customfpc2.jpg","hash":"737c209d06a62652c99a234907969c425123bb5a","modified":1673343670045},{"_id":"source/images/fitting fpcs/originalfpc.jpg","hash":"0798c5456ed6442368962f8682e95e1dcee9f6fd","modified":1673343829102},{"_id":"source/images/fitting fpcs/finaldesign1.jpg","hash":"d1475db313f2208d7c4309eb0ea1574dc77da224","modified":1673343948153},{"_id":"source/images/fitting fpcs/customfpc3.jpg","hash":"e59a8d15b66d0b0b46029b7e35d7f632aa54cb31","modified":1673343680422},{"_id":"source/images/vitadockaux/outputSelect.png","hash":"4cb245fbacb68f0840afd1f7a267d2a11f43e6f4","modified":1683921624193},{"_id":"source/images/vitadockaux/configureTool.png","hash":"bc9029bc7b6135c23eed27e07f2fe92d91bb1238","modified":1683921597266},{"_id":"source/images/vitadockaux/inputSelect.png","hash":"36bc77041a8cbf13fb3593dd1a6dbb018508de78","modified":1683921612140},{"_id":"source/images/vitadockaux/thumb.png","hash":"601918c31f360975cf9fe796f1dc977d5f26aa62","modified":1683923586382},{"_id":"source/images/batteryCharger.png","hash":"4ac5212038d87c29935ee9a06587d7894ef8133d","modified":1670231995533},{"_id":"source/images/before-thumb.jpg","hash":"daf583e7dd9be82f4aeeb5a66ed70848a5ca899d","modified":1669989048754},{"_id":"source/images/supercapacitor.png","hash":"b4df8bc7b958afed5fbf5989fae0ce397e8eb192","modified":1669996446297},{"_id":"source/images/consolizer - making connections/analog-thumb.png","hash":"8f63cc641ec0f12c1132db9c9c72c1c9074742ba","modified":1671739486856},{"_id":"source/images/fitting fpcs/finaldesign2.png","hash":"3149035cccfccaeb70914f915627991a47b2d519","modified":1673343957784},{"_id":"source/images/vitadockaux/configureAux.png","hash":"4b0fc89b5a7018d1a2f7a456bef17f5769385ae0","modified":1683921773279},{"_id":"source/images/vitadockaux/enableAux.png","hash":"a1e34ce9d0c125001bfdb8715ec70b10adc224f8","modified":1683921794146},{"_id":"source/images/vitadockaux/menulibre.png","hash":"7fea849db7f69dcf631c26446a9bb45a3a578fca","modified":1683921698763},{"_id":"source/images/after-thumb.jpg","hash":"aefeba7ddd59552d02a4233496df520f6a433c3e","modified":1670232972603},{"_id":"source/images/cell-thumb.jpg","hash":"e56c1ce48390c86b2b3e81d9d64ba3179abeea41","modified":1670232952772},{"_id":"source/images/consolizer.jpg","hash":"4b6658bd719d860f6182ce753c62ace0e2e58d9d","modified":1669927469952},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":499162500000},{"_id":"themes/landscape/_config.yml","hash":"05a0a76bf14e0dc099a594c5ae709b244dee9069","modified":1669926903244},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":499162500000},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":499162500000},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":499162500000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":499162500000},{"_id":"themes/landscape/Gruntfile.js","hash":"6eb1eb87eab8391ffbde544f6cbe0cbde8c0fb5d","modified":1669975408518},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":499162500000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":499162500000},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":499162500000},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":499162500000},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":499162500000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":499162500000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":499162500000},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":499162500000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":499162500000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":499162500000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":499162500000},{"_id":"themes/landscape/layout/archive.ejs","hash":"89a8bbea810ed33aaa39f528ce73fc96cebf7d2d","modified":1669989512426},{"_id":"themes/landscape/layout/category.ejs","hash":"46321a6946fd199e2feb3ecb6d04f060325d99a7","modified":1669989507967},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":499162500000},{"_id":"themes/landscape/layout/index.ejs","hash":"f7fda68f65b7761f573a242d92e5b76d1940fe00","modified":1669989504856},{"_id":"themes/landscape/scripts/alert.js","hash":"25a353bc9ee7f9f66383c79bb32806c14d06d2fb","modified":1683900940010},{"_id":"themes/landscape/scripts/fancybox.js","hash":"5f47e61db5f22ef92bf832114f8df216d6eef335","modified":1680509268227},{"_id":"themes/landscape/layout/page.ejs","hash":"63b25b2097f08ae5f3dc94d0f22ef0306fe30b0e","modified":1669974325122},{"_id":"themes/landscape/layout/post.ejs","hash":"59d6814a680a366272e591a4a59e5718cfda35e3","modified":1669974343557},{"_id":"themes/landscape/layout/tag.ejs","hash":"2f64525ee4d775cfa9b8455308a0a4068b41e574","modified":1669989500214},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1670248465123},{"_id":"themes/landscape/source/particles.json","hash":"9990d72bbcc37f56f83e5bd63cee3aa074226112","modified":1669823341460},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"dd8e18ba2ec40c3ddb66bc9db4a9224c37c10bca","modified":1669822940881},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":499162500000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"b3f6a4b4e42e9e5ae7d29db544482c4a472fb4f2","modified":1669974330436},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":499162500000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":499162500000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"017c412bd3d60d22e493f02918e436a32d96bb84","modified":1671654706266},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":499162500000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":499162500000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":499162500000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":499162500000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"74c2e994245ad6bc33f166e7ef38b437a993b2ca","modified":1670187983154},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":499162500000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":499162500000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":499162500000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"8529339bbe0820325277b97787a6350cc36cdfab","modified":1669988710165},{"_id":"themes/landscape/source/css/style.styl","hash":"205de4ce1b49a6d02238a2d38063513ad5caf693","modified":1671655492813},{"_id":"themes/landscape/source/css/_variables.styl","hash":"75038a7bc9f72b3a0a0576031eaa5fe15e363168","modified":1669823660413},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":499162500000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":499162500000},{"_id":"themes/landscape/source/js/script.js","hash":"847a7905c2729a16718af24cca9249562f140a14","modified":1680509170906},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":499162500000},{"_id":"themes/landscape/source/js/particles.js","hash":"2b2df00777b5ecc1986868035b4f4e5ebd73182e","modified":1669903043760},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":499162500000},{"_id":"themes/landscape/layout/_partial/post/signoff.ejs","hash":"161e9b896805aebccb02c509b2bf58de73e74116","modified":1669973947515},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/alert.styl","hash":"c3824bd7f4bce17edc36a1080d995eba03f435cc","modified":1683901033599},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":499162500000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"2c8392a2e0acdbc02248d482bdd2810f58e5fb3c","modified":1669978833897},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":499162500000},{"_id":"themes/landscape/source/css/_partial/signoff.styl","hash":"a8f7c4e44c320ebe95040720c221bdbaf32d09a7","modified":1669973961172},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":499162500000},{"_id":"source/images/cell.jpg","hash":"e9514a7ba7af4f666293bde80da84c12155e4029","modified":1669964647917},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":499162500000},{"_id":"source/images/after.jpg","hash":"ed248e987fff8553acc6b8682edfd57f58b689a5","modified":1669964650033},{"_id":"source/images/previewImage.jpg","hash":"22eb28bd9c949ff18557bee1c5efac18660a8e47","modified":1670233934965},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":499162500000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"source/images/ds3-nopower/dock.jpg","hash":"53b82c97b5e9a33e94aac1e01f3d7849eb03e599","modified":1674656120460},{"_id":"source/images/ds3-nopower/dock-open.jpg","hash":"e4cca17274cbb01d801668d524cdf341f71e186e","modified":1674656142758},{"_id":"source/images/before.jpg","hash":"c5522f70deddbe354053d3bb5d3f9874b73eb53d","modified":1669989089081},{"_id":"source/images/ds3-nopower/dock-con.JPG","hash":"2ee2372fc34049e56871afacfc678a87f55db7cc","modified":1674335567000},{"_id":"source/images/ds3-nopower/dock-connector.JPG","hash":"c738d24856373a4daf393f619a586912c6fff071","modified":1674335567000},{"_id":"source/images/ds3-nopower/working.JPG","hash":"ad245d510111e97268f0f7ad1a94979313ee14e0","modified":1674485649000},{"_id":"source/images/ds3-nopower/IMG_4688.JPG","hash":"51ffaa7cddbe0a4533d14920d6d18a5ff6a0c6c8","modified":1674335567000},{"_id":"source/images/ds3-nopower/repair.JPG","hash":"29e72ed88cd1d7eb8313c2bc5488013eee3fe559","modified":1674335567000},{"_id":"source/images/ds3-nopower/charging.JPG","hash":"4394f818ac7fe2a1bec6b6251570a2060e63454b","modified":1674544684000},{"_id":"source/images/ds3-nopower/charge.JPG","hash":"4394f818ac7fe2a1bec6b6251570a2060e63454b","modified":1674544684000},{"_id":"source/images/ds3-nopower/under-bat-cover.JPG","hash":"6d055adf3cf5d528a42339e0cb00f78afd6cb0c4","modified":1674465070484},{"_id":"source/images/ds3-nopower/ribbons.JPG","hash":"12e63ac00f2a4c29a380364531f145058159421c","modified":1674465310199},{"_id":"source/images/ds3-nopower/back.JPG","hash":"7cff9177350adf6eb2b6a29d40a720b3cf3d4359","modified":1674566373053},{"_id":"source/images/ds3-nopower/batteryswell.gif","hash":"901a755e6d146bc741951bf115781a3dd04a8af9","modified":1674565961013},{"_id":"source/images/PSPStock.png","hash":"a74eb968f5096ea1def2cb440666be55316bd27b","modified":1680507702029}],"Category":[],"Data":[],"Page":[{"title":"About Me","date":"2022-12-02T09:40:35.000Z","_content":"\nHi, my name is **Stephen Cooper**, hows things?\n\nI'm a software engineer and I've been working with web-based technologies for going on ten years now.\n\nI enjoy anything DIY, taking the car apart, taking the house apart, taking retro consoles apart and usually I can put most of them back together again.\n\nWhy not check out my [GitHub](https://github.com/ste2425) to see what I'm working on or my [Twitter](https://twitter.com/_s_cooper) if you want to say hi?\n\n---\n\n# Personal Projects\n\nI've built a number of personal projects in the past (some much worse than others)\n\n### PSP Consolizer\n\nA project using an `Arduino nano 33 IOT` to turn a PSP into a games console that can use Bluetooth based controllers.\n\nhttps://github.com/ste2425/PSP-Consolizer\n\n{% fancybox /images/consolizer.jpg /images/consolizer-thumb.jpg \"PSP Consolizer\" %}\n\n### PSP Consolizer Installer\n\nAn electron app to provide users of my PSP Consolizer a single click installer to program their Arduino and flash the NINA firmware. All without needing to install the Arduino IDE or any other tools.\n\nhttps://github.com/ste2425/psp-consolizer-installer\n\n{% fancybox /images/aboutme/pspInstaller.png /images/aboutme/pspInstaller-thumb.png \"PSP Consolizer Installer\" %}\n\n### Dotnet Runner\n\nAn electron app to manage running multiple .NET core applications.\n\nhttps://github.com/ste2425/DotnetRunner\n\n{% fancybox /images/aboutme/dotnetrunner.png /images/aboutme/dotnetrunner-thumb.png \"Dotnet Runner\" %}\n\n### Webservice Mocker\n\nA very old unfinished project to make mocking web services for UI testing easy.\n\nhttps://github.com/ste2425/webservice-mocker\n","source":"about/index.md","raw":"---\ntitle: About Me\ndate: 2022-12-02 09:40:35\n---\n\nHi, my name is **Stephen Cooper**, hows things?\n\nI'm a software engineer and I've been working with web-based technologies for going on ten years now.\n\nI enjoy anything DIY, taking the car apart, taking the house apart, taking retro consoles apart and usually I can put most of them back together again.\n\nWhy not check out my [GitHub](https://github.com/ste2425) to see what I'm working on or my [Twitter](https://twitter.com/_s_cooper) if you want to say hi?\n\n---\n\n# Personal Projects\n\nI've built a number of personal projects in the past (some much worse than others)\n\n### PSP Consolizer\n\nA project using an `Arduino nano 33 IOT` to turn a PSP into a games console that can use Bluetooth based controllers.\n\nhttps://github.com/ste2425/PSP-Consolizer\n\n{% fancybox /images/consolizer.jpg /images/consolizer-thumb.jpg \"PSP Consolizer\" %}\n\n### PSP Consolizer Installer\n\nAn electron app to provide users of my PSP Consolizer a single click installer to program their Arduino and flash the NINA firmware. All without needing to install the Arduino IDE or any other tools.\n\nhttps://github.com/ste2425/psp-consolizer-installer\n\n{% fancybox /images/aboutme/pspInstaller.png /images/aboutme/pspInstaller-thumb.png \"PSP Consolizer Installer\" %}\n\n### Dotnet Runner\n\nAn electron app to manage running multiple .NET core applications.\n\nhttps://github.com/ste2425/DotnetRunner\n\n{% fancybox /images/aboutme/dotnetrunner.png /images/aboutme/dotnetrunner-thumb.png \"Dotnet Runner\" %}\n\n### Webservice Mocker\n\nA very old unfinished project to make mocking web services for UI testing easy.\n\nhttps://github.com/ste2425/webservice-mocker\n","updated":"2022-12-02T13:46:50.484Z","path":"about/index.html","comments":1,"layout":"page","_id":"cliea35bd0000mkue0uau6rn7","content":"<p>Hi, my name is <strong>Stephen Cooper</strong>, hows things?</p>\n<p>I’m a software engineer and I’ve been working with web-based technologies for going on ten years now.</p>\n<p>I enjoy anything DIY, taking the car apart, taking the house apart, taking retro consoles apart and usually I can put most of them back together again.</p>\n<p>Why not check out my <a href=\"https://github.com/ste2425\">GitHub</a> to see what I’m working on or my <a href=\"https://twitter.com/_s_cooper\">Twitter</a> if you want to say hi?</p>\n<hr>\n<h1 id=\"Personal-Projects\"><a href=\"#Personal-Projects\" class=\"headerlink\" title=\"Personal Projects\"></a>Personal Projects</h1><p>I’ve built a number of personal projects in the past (some much worse than others)</p>\n<h3 id=\"PSP-Consolizer\"><a href=\"#PSP-Consolizer\" class=\"headerlink\" title=\"PSP Consolizer\"></a>PSP Consolizer</h3><p>A project using an <code>Arduino nano 33 IOT</code> to turn a PSP into a games console that can use Bluetooth based controllers.</p>\n<p><a href=\"https://github.com/ste2425/PSP-Consolizer\">https://github.com/ste2425/PSP-Consolizer</a></p>\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer.jpg\"\n    title=\"PSP Consolizer\"\n  >\n    <img\n      src=\"/images/consolizer-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"PSP Consolizer\" />\n  </a>\n\n  <span class=\"caption \">\n    PSP Consolizer\n  </span>\n\n\n<h3 id=\"PSP-Consolizer-Installer\"><a href=\"#PSP-Consolizer-Installer\" class=\"headerlink\" title=\"PSP Consolizer Installer\"></a>PSP Consolizer Installer</h3><p>An electron app to provide users of my PSP Consolizer a single click installer to program their Arduino and flash the NINA firmware. All without needing to install the Arduino IDE or any other tools.</p>\n<p><a href=\"https://github.com/ste2425/psp-consolizer-installer\">https://github.com/ste2425/psp-consolizer-installer</a></p>\n\n  <a class=\"fancybox\" \n    href=\"/images/aboutme/pspInstaller.png\"\n    title=\"PSP Consolizer Installer\"\n  >\n    <img\n      src=\"/images/aboutme/pspInstaller-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"PSP Consolizer Installer\" />\n  </a>\n\n  <span class=\"caption \">\n    PSP Consolizer Installer\n  </span>\n\n\n<h3 id=\"Dotnet-Runner\"><a href=\"#Dotnet-Runner\" class=\"headerlink\" title=\"Dotnet Runner\"></a>Dotnet Runner</h3><p>An electron app to manage running multiple .NET core applications.</p>\n<p><a href=\"https://github.com/ste2425/DotnetRunner\">https://github.com/ste2425/DotnetRunner</a></p>\n\n  <a class=\"fancybox\" \n    href=\"/images/aboutme/dotnetrunner.png\"\n    title=\"Dotnet Runner\"\n  >\n    <img\n      src=\"/images/aboutme/dotnetrunner-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"Dotnet Runner\" />\n  </a>\n\n  <span class=\"caption \">\n    Dotnet Runner\n  </span>\n\n\n<h3 id=\"Webservice-Mocker\"><a href=\"#Webservice-Mocker\" class=\"headerlink\" title=\"Webservice Mocker\"></a>Webservice Mocker</h3><p>A very old unfinished project to make mocking web services for UI testing easy.</p>\n<p><a href=\"https://github.com/ste2425/webservice-mocker\">https://github.com/ste2425/webservice-mocker</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Hi, my name is <strong>Stephen Cooper</strong>, hows things?</p>\n<p>I’m a software engineer and I’ve been working with web-based technologies for going on ten years now.</p>\n<p>I enjoy anything DIY, taking the car apart, taking the house apart, taking retro consoles apart and usually I can put most of them back together again.</p>\n<p>Why not check out my <a href=\"https://github.com/ste2425\">GitHub</a> to see what I’m working on or my <a href=\"https://twitter.com/_s_cooper\">Twitter</a> if you want to say hi?</p>\n<hr>\n<h1 id=\"Personal-Projects\"><a href=\"#Personal-Projects\" class=\"headerlink\" title=\"Personal Projects\"></a>Personal Projects</h1><p>I’ve built a number of personal projects in the past (some much worse than others)</p>\n<h3 id=\"PSP-Consolizer\"><a href=\"#PSP-Consolizer\" class=\"headerlink\" title=\"PSP Consolizer\"></a>PSP Consolizer</h3><p>A project using an <code>Arduino nano 33 IOT</code> to turn a PSP into a games console that can use Bluetooth based controllers.</p>\n<p><a href=\"https://github.com/ste2425/PSP-Consolizer\">https://github.com/ste2425/PSP-Consolizer</a></p>\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer.jpg\"\n    title=\"PSP Consolizer\"\n  >\n    <img\n      src=\"/images/consolizer-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"PSP Consolizer\" />\n  </a>\n\n  <span class=\"caption \">\n    PSP Consolizer\n  </span>\n\n\n<h3 id=\"PSP-Consolizer-Installer\"><a href=\"#PSP-Consolizer-Installer\" class=\"headerlink\" title=\"PSP Consolizer Installer\"></a>PSP Consolizer Installer</h3><p>An electron app to provide users of my PSP Consolizer a single click installer to program their Arduino and flash the NINA firmware. All without needing to install the Arduino IDE or any other tools.</p>\n<p><a href=\"https://github.com/ste2425/psp-consolizer-installer\">https://github.com/ste2425/psp-consolizer-installer</a></p>\n\n  <a class=\"fancybox\" \n    href=\"/images/aboutme/pspInstaller.png\"\n    title=\"PSP Consolizer Installer\"\n  >\n    <img\n      src=\"/images/aboutme/pspInstaller-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"PSP Consolizer Installer\" />\n  </a>\n\n  <span class=\"caption \">\n    PSP Consolizer Installer\n  </span>\n\n\n<h3 id=\"Dotnet-Runner\"><a href=\"#Dotnet-Runner\" class=\"headerlink\" title=\"Dotnet Runner\"></a>Dotnet Runner</h3><p>An electron app to manage running multiple .NET core applications.</p>\n<p><a href=\"https://github.com/ste2425/DotnetRunner\">https://github.com/ste2425/DotnetRunner</a></p>\n\n  <a class=\"fancybox\" \n    href=\"/images/aboutme/dotnetrunner.png\"\n    title=\"Dotnet Runner\"\n  >\n    <img\n      src=\"/images/aboutme/dotnetrunner-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"Dotnet Runner\" />\n  </a>\n\n  <span class=\"caption \">\n    Dotnet Runner\n  </span>\n\n\n<h3 id=\"Webservice-Mocker\"><a href=\"#Webservice-Mocker\" class=\"headerlink\" title=\"Webservice Mocker\"></a>Webservice Mocker</h3><p>A very old unfinished project to make mocking web services for UI testing easy.</p>\n<p><a href=\"https://github.com/ste2425/webservice-mocker\">https://github.com/ste2425/webservice-mocker</a></p>\n"}],"Post":[{"title":"PSP Internal Consolizer - On HOLD","image":"/images/PSPStock.png","_content":"\nIt's been a while since I posted about my PSP Consolizer project. I was attempting to find a way of connecting both the original buttons and the Arduino to the PSP's motherboard at the same time.\n\nAfter a few failed attempts (check out my previous blog posts) I've put down this part of the project.\n\n<!-- more -->\n\n# To recap\n\nFirstly where are we? How far have we got with this consolizer?\n\nWell for the PSP-2000 it's fully working. You can use any Bluetooth HID controller (DS3/4, Xbox One, Switch, Wii etc) to play games on your PSP 2000.\n\nThats not all. Compared to where i first started, just being able to move the menu up and down.\n\n{% fancyboxmedia https://www.youtube.com/embed/aO6hr9lEFRw  [\"helo\"] %}\n\nSo for my internal Consolizer project one of the most difficult parts is going to be intercepting the button presses.\n\nI need to allow the original buttons to work but also allow the Arduino to trigger button presses, potentially at the same time.\n\nThe original plan was to build small adapter FPC's. These would sit in between the PSP's original FPC and its motherboard. Thus giving us our hook to tap into those signals.\n\nAfter numerous design iterations (lots of printing and cutting and making tiny changes) I've concluded I just can't make that work. There isn't enough space.\n\n{% fancybox \"/images/fitting fpcs/adapter1.png\" \"First Buttons Design\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter4.jpg\" \"First Buttons Test Fit\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter2.png\" \"First Analog Stick Design\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter3.jpg\" \"First Analog Stick Test Fit\" %}\n\n# The Solution\n\nWell if I can't intercept the signals what can I do? The idea I stopped on was to replace the PSP's FPC's entirely. One for the left and one for the right.\n\nThey aren't complex and that would allow me to intercept the signals in any way I want.\n\nThe left FPC is smaller and simpler so started with that.\n\n{% fancybox \"/images/fitting fpcs/customfpc1.jpg\" \"First attempts at recreating the FPC shape\" %}\n\nMuch like the adapters the process of re-creating the original involved lots of printing to paper, cutting out and offering up to the PSP.\n\nThere must have been at least a dozen attempts before everything fitted nicely and the button footprints lined up.\n\n{% fancybox \"/images/fitting fpcs/customfpc3.jpg\" \"Buttons seemed to line up\" %}\n\n{% fancybox \"/images/fitting fpcs/customfpc2.jpg\" \"Even the shoulder button lined up\" %}\n\nOnce the board layout was right there was another problem.\n\n# The Buttons\n\nMost controller buttons work with an exposed footprint on the PCB and a carbon pad embedded within the button rubber. This causes a short when the button is pressed and triggers a signal.\n\nThe PSP does this, but differently. The FPC is dual layer. The bottom layer has the footprint, the top layer the carbon pad. It's all self contained.\n\n{% fancybox \"/images/fitting fpcs/originalfpc.jpg\" \"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\" %}\n\nThis probably makes it more robust, stops buttons failing to register when they get old. It also makes it very difficult to replicate. I'm not even sure it's possible for a DIYer.\n\nSo I had to find an alternative. I settled upon micro tactile switches like those used in the Gameboy SP.\n\nThey can come in a wide range of sizes so I just needed to measure the height of the original button rubbers and find a switch as close to that as I could.\n\n{% fancybox \"/images/fitting fpcs/finaldesign1.jpg\" \"Custom left button FPC out on paper\" %}\n\n{% fancybox \"/images/fitting fpcs/finaldesign2.png\" \"The final custom FPC design\" %}\n\n# Final Stretch\n\nSo with the problems addressed I thought I could go ahead and have my FPC made. I had spent hours printing and test fitting; found the right tactile switches it was all good to go.\n\nYea it didn't work out like that.\n\nThe cheapest quote I got was from OSHPark, about $35. Not amazing but not out of my reach.\n\nSadly the cheapest tracking shipment on top of that was around another $35.\n\nAll in so far were around £57. Getting a bit rich for my tastes but I was tempted.\n\nThe nail in the coffin was VAT. I have no idea if this is Brexit shafting us, an odd EU thing or just the way it is. But OSHPark doesn't seem to handle VAT properly anymore.\n\nI've read multiple accounts on Twitter of overseas customers paying VAT at checkout, but then when goods arrive getting customs charges. They end up paying VAT twice and handling fees.\n\nAll that added up would put it way out of my price range.\n\n# To Finish Up\n\nSo, if you're still here, we have a nicely designed replacement FPC for the left buttons. A solution for the dual layer carbon pad contacts thing. It's all been test fitted and _should_ work, I just can't afford to have them made.\n\nNot wanting this to hold up my entire project Iv'e thought about a hack of a workaround.\n\nI'm going to use my re-designed FPC as a template (printed to paper) and hot glue the tact switches into place. I'll chop in half a cheap FFC cable and solder its wires directly to the tact switches.\n\nIt's not amazing but it will (i think) work and get me going again. I don't want to be hung up on this custom FPC issue.\n\nThe other benefit is someone attempting to build this in the future has options, they could have the custom FPC's made for a more professional finish or if there skint like me do this DIY solution instead.\n","source":"_drafts/PSP-Internal-Consolizer-On Hold.md","raw":"---\ntitle: PSP Internal Consolizer - On HOLD\ntags:\n  - psp\n  - psp-consolizer\nimage: /images/PSPStock.png\n---\n\nIt's been a while since I posted about my PSP Consolizer project. I was attempting to find a way of connecting both the original buttons and the Arduino to the PSP's motherboard at the same time.\n\nAfter a few failed attempts (check out my previous blog posts) I've put down this part of the project.\n\n<!-- more -->\n\n# To recap\n\nFirstly where are we? How far have we got with this consolizer?\n\nWell for the PSP-2000 it's fully working. You can use any Bluetooth HID controller (DS3/4, Xbox One, Switch, Wii etc) to play games on your PSP 2000.\n\nThats not all. Compared to where i first started, just being able to move the menu up and down.\n\n{% fancyboxmedia https://www.youtube.com/embed/aO6hr9lEFRw  [\"helo\"] %}\n\nSo for my internal Consolizer project one of the most difficult parts is going to be intercepting the button presses.\n\nI need to allow the original buttons to work but also allow the Arduino to trigger button presses, potentially at the same time.\n\nThe original plan was to build small adapter FPC's. These would sit in between the PSP's original FPC and its motherboard. Thus giving us our hook to tap into those signals.\n\nAfter numerous design iterations (lots of printing and cutting and making tiny changes) I've concluded I just can't make that work. There isn't enough space.\n\n{% fancybox \"/images/fitting fpcs/adapter1.png\" \"First Buttons Design\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter4.jpg\" \"First Buttons Test Fit\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter2.png\" \"First Analog Stick Design\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter3.jpg\" \"First Analog Stick Test Fit\" %}\n\n# The Solution\n\nWell if I can't intercept the signals what can I do? The idea I stopped on was to replace the PSP's FPC's entirely. One for the left and one for the right.\n\nThey aren't complex and that would allow me to intercept the signals in any way I want.\n\nThe left FPC is smaller and simpler so started with that.\n\n{% fancybox \"/images/fitting fpcs/customfpc1.jpg\" \"First attempts at recreating the FPC shape\" %}\n\nMuch like the adapters the process of re-creating the original involved lots of printing to paper, cutting out and offering up to the PSP.\n\nThere must have been at least a dozen attempts before everything fitted nicely and the button footprints lined up.\n\n{% fancybox \"/images/fitting fpcs/customfpc3.jpg\" \"Buttons seemed to line up\" %}\n\n{% fancybox \"/images/fitting fpcs/customfpc2.jpg\" \"Even the shoulder button lined up\" %}\n\nOnce the board layout was right there was another problem.\n\n# The Buttons\n\nMost controller buttons work with an exposed footprint on the PCB and a carbon pad embedded within the button rubber. This causes a short when the button is pressed and triggers a signal.\n\nThe PSP does this, but differently. The FPC is dual layer. The bottom layer has the footprint, the top layer the carbon pad. It's all self contained.\n\n{% fancybox \"/images/fitting fpcs/originalfpc.jpg\" \"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\" %}\n\nThis probably makes it more robust, stops buttons failing to register when they get old. It also makes it very difficult to replicate. I'm not even sure it's possible for a DIYer.\n\nSo I had to find an alternative. I settled upon micro tactile switches like those used in the Gameboy SP.\n\nThey can come in a wide range of sizes so I just needed to measure the height of the original button rubbers and find a switch as close to that as I could.\n\n{% fancybox \"/images/fitting fpcs/finaldesign1.jpg\" \"Custom left button FPC out on paper\" %}\n\n{% fancybox \"/images/fitting fpcs/finaldesign2.png\" \"The final custom FPC design\" %}\n\n# Final Stretch\n\nSo with the problems addressed I thought I could go ahead and have my FPC made. I had spent hours printing and test fitting; found the right tactile switches it was all good to go.\n\nYea it didn't work out like that.\n\nThe cheapest quote I got was from OSHPark, about $35. Not amazing but not out of my reach.\n\nSadly the cheapest tracking shipment on top of that was around another $35.\n\nAll in so far were around £57. Getting a bit rich for my tastes but I was tempted.\n\nThe nail in the coffin was VAT. I have no idea if this is Brexit shafting us, an odd EU thing or just the way it is. But OSHPark doesn't seem to handle VAT properly anymore.\n\nI've read multiple accounts on Twitter of overseas customers paying VAT at checkout, but then when goods arrive getting customs charges. They end up paying VAT twice and handling fees.\n\nAll that added up would put it way out of my price range.\n\n# To Finish Up\n\nSo, if you're still here, we have a nicely designed replacement FPC for the left buttons. A solution for the dual layer carbon pad contacts thing. It's all been test fitted and _should_ work, I just can't afford to have them made.\n\nNot wanting this to hold up my entire project Iv'e thought about a hack of a workaround.\n\nI'm going to use my re-designed FPC as a template (printed to paper) and hot glue the tact switches into place. I'll chop in half a cheap FFC cable and solder its wires directly to the tact switches.\n\nIt's not amazing but it will (i think) work and get me going again. I don't want to be hung up on this custom FPC issue.\n\nThe other benefit is someone attempting to build this in the future has options, they could have the custom FPC's made for a more professional finish or if there skint like me do this DIY solution instead.\n","slug":"PSP-Internal-Consolizer-On Hold","published":0,"date":"2023-04-03T07:40:12.128Z","updated":"2023-04-03T08:07:43.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliea35bg0001mkuehk57dixq","content":"<p>It’s been a while since I posted about my PSP Consolizer project. I was attempting to find a way of connecting both the original buttons and the Arduino to the PSP’s motherboard at the same time.</p>\n<p>After a few failed attempts (check out my previous blog posts) I’ve put down this part of the project.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"To-recap\"><a href=\"#To-recap\" class=\"headerlink\" title=\"To recap\"></a>To recap</h1><p>Firstly where are we? How far have we got with this consolizer?</p>\n<p>Well for the PSP-2000 it’s fully working. You can use any Bluetooth HID controller (DS3/4, Xbox One, Switch, Wii etc) to play games on your PSP 2000.</p>\n<p>Thats not all. Compared to where i first started, just being able to move the menu up and down.</p>\n\n  <a class=\"fancybox\" \n    href=\"https://www.youtube.com/embed/aO6hr9lEFRw\"\n    title=\"[helo]\"\n  >\n  </a>\n\n\n\n<p>So for my internal Consolizer project one of the most difficult parts is going to be intercepting the button presses.</p>\n<p>I need to allow the original buttons to work but also allow the Arduino to trigger button presses, potentially at the same time.</p>\n<p>The original plan was to build small adapter FPC’s. These would sit in between the PSP’s original FPC and its motherboard. Thus giving us our hook to tap into those signals.</p>\n<p>After numerous design iterations (lots of printing and cutting and making tiny changes) I’ve concluded I just can’t make that work. There isn’t enough space.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter1.png\"\n    title=\"First Buttons Design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter1.png\"\n      style=\"max-width: 300px\"\n      alt=\"First Buttons Design\" />\n  </a>\n\n  <span class=\"caption \">\n    First Buttons Design\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter4.jpg\"\n    title=\"First Buttons Test Fit\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter4.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First Buttons Test Fit\" />\n  </a>\n\n  <span class=\"caption \">\n    First Buttons Test Fit\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter2.png\"\n    title=\"First Analog Stick Design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter2.png\"\n      style=\"max-width: 300px\"\n      alt=\"First Analog Stick Design\" />\n  </a>\n\n  <span class=\"caption \">\n    First Analog Stick Design\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter3.jpg\"\n    title=\"First Analog Stick Test Fit\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter3.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First Analog Stick Test Fit\" />\n  </a>\n\n  <span class=\"caption \">\n    First Analog Stick Test Fit\n  </span>\n\n\n<h1 id=\"The-Solution\"><a href=\"#The-Solution\" class=\"headerlink\" title=\"The Solution\"></a>The Solution</h1><p>Well if I can’t intercept the signals what can I do? The idea I stopped on was to replace the PSP’s FPC’s entirely. One for the left and one for the right.</p>\n<p>They aren’t complex and that would allow me to intercept the signals in any way I want.</p>\n<p>The left FPC is smaller and simpler so started with that.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc1.jpg\"\n    title=\"First attempts at recreating the FPC shape\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc1.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First attempts at recreating the FPC shape\" />\n  </a>\n\n  <span class=\"caption \">\n    First attempts at recreating the FPC shape\n  </span>\n\n\n<p>Much like the adapters the process of re-creating the original involved lots of printing to paper, cutting out and offering up to the PSP.</p>\n<p>There must have been at least a dozen attempts before everything fitted nicely and the button footprints lined up.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc3.jpg\"\n    title=\"Buttons seemed to line up\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc3.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Buttons seemed to line up\" />\n  </a>\n\n  <span class=\"caption \">\n    Buttons seemed to line up\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc2.jpg\"\n    title=\"Even the shoulder button lined up\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc2.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Even the shoulder button lined up\" />\n  </a>\n\n  <span class=\"caption \">\n    Even the shoulder button lined up\n  </span>\n\n\n<p>Once the board layout was right there was another problem.</p>\n<h1 id=\"The-Buttons\"><a href=\"#The-Buttons\" class=\"headerlink\" title=\"The Buttons\"></a>The Buttons</h1><p>Most controller buttons work with an exposed footprint on the PCB and a carbon pad embedded within the button rubber. This causes a short when the button is pressed and triggers a signal.</p>\n<p>The PSP does this, but differently. The FPC is dual layer. The bottom layer has the footprint, the top layer the carbon pad. It’s all self contained.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/originalfpc.jpg\"\n    title=\"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\"\n  >\n    <img\n      src=\"/images/fitting fpcs/originalfpc.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\" />\n  </a>\n\n  <span class=\"caption \">\n    The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\n  </span>\n\n\n<p>This probably makes it more robust, stops buttons failing to register when they get old. It also makes it very difficult to replicate. I’m not even sure it’s possible for a DIYer.</p>\n<p>So I had to find an alternative. I settled upon micro tactile switches like those used in the Gameboy SP.</p>\n<p>They can come in a wide range of sizes so I just needed to measure the height of the original button rubbers and find a switch as close to that as I could.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign1.jpg\"\n    title=\"Custom left button FPC out on paper\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign1.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Custom left button FPC out on paper\" />\n  </a>\n\n  <span class=\"caption \">\n    Custom left button FPC out on paper\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign2.png\"\n    title=\"The final custom FPC design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign2.png\"\n      style=\"max-width: 300px\"\n      alt=\"The final custom FPC design\" />\n  </a>\n\n  <span class=\"caption \">\n    The final custom FPC design\n  </span>\n\n\n<h1 id=\"Final-Stretch\"><a href=\"#Final-Stretch\" class=\"headerlink\" title=\"Final Stretch\"></a>Final Stretch</h1><p>So with the problems addressed I thought I could go ahead and have my FPC made. I had spent hours printing and test fitting; found the right tactile switches it was all good to go.</p>\n<p>Yea it didn’t work out like that.</p>\n<p>The cheapest quote I got was from OSHPark, about $35. Not amazing but not out of my reach.</p>\n<p>Sadly the cheapest tracking shipment on top of that was around another $35.</p>\n<p>All in so far were around £57. Getting a bit rich for my tastes but I was tempted.</p>\n<p>The nail in the coffin was VAT. I have no idea if this is Brexit shafting us, an odd EU thing or just the way it is. But OSHPark doesn’t seem to handle VAT properly anymore.</p>\n<p>I’ve read multiple accounts on Twitter of overseas customers paying VAT at checkout, but then when goods arrive getting customs charges. They end up paying VAT twice and handling fees.</p>\n<p>All that added up would put it way out of my price range.</p>\n<h1 id=\"To-Finish-Up\"><a href=\"#To-Finish-Up\" class=\"headerlink\" title=\"To Finish Up\"></a>To Finish Up</h1><p>So, if you’re still here, we have a nicely designed replacement FPC for the left buttons. A solution for the dual layer carbon pad contacts thing. It’s all been test fitted and <em>should</em> work, I just can’t afford to have them made.</p>\n<p>Not wanting this to hold up my entire project Iv’e thought about a hack of a workaround.</p>\n<p>I’m going to use my re-designed FPC as a template (printed to paper) and hot glue the tact switches into place. I’ll chop in half a cheap FFC cable and solder its wires directly to the tact switches.</p>\n<p>It’s not amazing but it will (i think) work and get me going again. I don’t want to be hung up on this custom FPC issue.</p>\n<p>The other benefit is someone attempting to build this in the future has options, they could have the custom FPC’s made for a more professional finish or if there skint like me do this DIY solution instead.</p>\n","site":{"data":{}},"excerpt":"<p>It’s been a while since I posted about my PSP Consolizer project. I was attempting to find a way of connecting both the original buttons and the Arduino to the PSP’s motherboard at the same time.</p>\n<p>After a few failed attempts (check out my previous blog posts) I’ve put down this part of the project.</p>","more":"<h1 id=\"To-recap\"><a href=\"#To-recap\" class=\"headerlink\" title=\"To recap\"></a>To recap</h1><p>Firstly where are we? How far have we got with this consolizer?</p>\n<p>Well for the PSP-2000 it’s fully working. You can use any Bluetooth HID controller (DS3/4, Xbox One, Switch, Wii etc) to play games on your PSP 2000.</p>\n<p>Thats not all. Compared to where i first started, just being able to move the menu up and down.</p>\n\n  <a class=\"fancybox\" \n    href=\"https://www.youtube.com/embed/aO6hr9lEFRw\"\n    title=\"[helo]\"\n  >\n  </a>\n\n\n\n<p>So for my internal Consolizer project one of the most difficult parts is going to be intercepting the button presses.</p>\n<p>I need to allow the original buttons to work but also allow the Arduino to trigger button presses, potentially at the same time.</p>\n<p>The original plan was to build small adapter FPC’s. These would sit in between the PSP’s original FPC and its motherboard. Thus giving us our hook to tap into those signals.</p>\n<p>After numerous design iterations (lots of printing and cutting and making tiny changes) I’ve concluded I just can’t make that work. There isn’t enough space.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter1.png\"\n    title=\"First Buttons Design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter1.png\"\n      style=\"max-width: 300px\"\n      alt=\"First Buttons Design\" />\n  </a>\n\n  <span class=\"caption \">\n    First Buttons Design\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter4.jpg\"\n    title=\"First Buttons Test Fit\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter4.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First Buttons Test Fit\" />\n  </a>\n\n  <span class=\"caption \">\n    First Buttons Test Fit\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter2.png\"\n    title=\"First Analog Stick Design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter2.png\"\n      style=\"max-width: 300px\"\n      alt=\"First Analog Stick Design\" />\n  </a>\n\n  <span class=\"caption \">\n    First Analog Stick Design\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter3.jpg\"\n    title=\"First Analog Stick Test Fit\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter3.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First Analog Stick Test Fit\" />\n  </a>\n\n  <span class=\"caption \">\n    First Analog Stick Test Fit\n  </span>\n\n\n<h1 id=\"The-Solution\"><a href=\"#The-Solution\" class=\"headerlink\" title=\"The Solution\"></a>The Solution</h1><p>Well if I can’t intercept the signals what can I do? The idea I stopped on was to replace the PSP’s FPC’s entirely. One for the left and one for the right.</p>\n<p>They aren’t complex and that would allow me to intercept the signals in any way I want.</p>\n<p>The left FPC is smaller and simpler so started with that.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc1.jpg\"\n    title=\"First attempts at recreating the FPC shape\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc1.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First attempts at recreating the FPC shape\" />\n  </a>\n\n  <span class=\"caption \">\n    First attempts at recreating the FPC shape\n  </span>\n\n\n<p>Much like the adapters the process of re-creating the original involved lots of printing to paper, cutting out and offering up to the PSP.</p>\n<p>There must have been at least a dozen attempts before everything fitted nicely and the button footprints lined up.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc3.jpg\"\n    title=\"Buttons seemed to line up\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc3.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Buttons seemed to line up\" />\n  </a>\n\n  <span class=\"caption \">\n    Buttons seemed to line up\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc2.jpg\"\n    title=\"Even the shoulder button lined up\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc2.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Even the shoulder button lined up\" />\n  </a>\n\n  <span class=\"caption \">\n    Even the shoulder button lined up\n  </span>\n\n\n<p>Once the board layout was right there was another problem.</p>\n<h1 id=\"The-Buttons\"><a href=\"#The-Buttons\" class=\"headerlink\" title=\"The Buttons\"></a>The Buttons</h1><p>Most controller buttons work with an exposed footprint on the PCB and a carbon pad embedded within the button rubber. This causes a short when the button is pressed and triggers a signal.</p>\n<p>The PSP does this, but differently. The FPC is dual layer. The bottom layer has the footprint, the top layer the carbon pad. It’s all self contained.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/originalfpc.jpg\"\n    title=\"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\"\n  >\n    <img\n      src=\"/images/fitting fpcs/originalfpc.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\" />\n  </a>\n\n  <span class=\"caption \">\n    The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\n  </span>\n\n\n<p>This probably makes it more robust, stops buttons failing to register when they get old. It also makes it very difficult to replicate. I’m not even sure it’s possible for a DIYer.</p>\n<p>So I had to find an alternative. I settled upon micro tactile switches like those used in the Gameboy SP.</p>\n<p>They can come in a wide range of sizes so I just needed to measure the height of the original button rubbers and find a switch as close to that as I could.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign1.jpg\"\n    title=\"Custom left button FPC out on paper\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign1.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Custom left button FPC out on paper\" />\n  </a>\n\n  <span class=\"caption \">\n    Custom left button FPC out on paper\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign2.png\"\n    title=\"The final custom FPC design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign2.png\"\n      style=\"max-width: 300px\"\n      alt=\"The final custom FPC design\" />\n  </a>\n\n  <span class=\"caption \">\n    The final custom FPC design\n  </span>\n\n\n<h1 id=\"Final-Stretch\"><a href=\"#Final-Stretch\" class=\"headerlink\" title=\"Final Stretch\"></a>Final Stretch</h1><p>So with the problems addressed I thought I could go ahead and have my FPC made. I had spent hours printing and test fitting; found the right tactile switches it was all good to go.</p>\n<p>Yea it didn’t work out like that.</p>\n<p>The cheapest quote I got was from OSHPark, about $35. Not amazing but not out of my reach.</p>\n<p>Sadly the cheapest tracking shipment on top of that was around another $35.</p>\n<p>All in so far were around £57. Getting a bit rich for my tastes but I was tempted.</p>\n<p>The nail in the coffin was VAT. I have no idea if this is Brexit shafting us, an odd EU thing or just the way it is. But OSHPark doesn’t seem to handle VAT properly anymore.</p>\n<p>I’ve read multiple accounts on Twitter of overseas customers paying VAT at checkout, but then when goods arrive getting customs charges. They end up paying VAT twice and handling fees.</p>\n<p>All that added up would put it way out of my price range.</p>\n<h1 id=\"To-Finish-Up\"><a href=\"#To-Finish-Up\" class=\"headerlink\" title=\"To Finish Up\"></a>To Finish Up</h1><p>So, if you’re still here, we have a nicely designed replacement FPC for the left buttons. A solution for the dual layer carbon pad contacts thing. It’s all been test fitted and <em>should</em> work, I just can’t afford to have them made.</p>\n<p>Not wanting this to hold up my entire project Iv’e thought about a hack of a workaround.</p>\n<p>I’m going to use my re-designed FPC as a template (printed to paper) and hot glue the tact switches into place. I’ll chop in half a cheap FFC cable and solder its wires directly to the tact switches.</p>\n<p>It’s not amazing but it will (i think) work and get me going again. I don’t want to be hung up on this custom FPC issue.</p>\n<p>The other benefit is someone attempting to build this in the future has options, they could have the custom FPC’s made for a more professional finish or if there skint like me do this DIY solution instead.</p>"},{"title":"3DS - Not powering on","image":"/images/ds3-nopower/ribbons.JPG","_content":"\nBeen waiting on a few PCB's to arrive for my PSP Consolizer project so thought I'd waste the time fixing the pile of broken consoles I've got.\n\nThe newest addition was a 3DS which would not power on or charge.\n\n<!-- more -->\n\n# The Problem\n\nQuite simply it would not power on, or charge. No other information was provided. It's possible the fault could be with the DC-in side of things and with a charged battery it will power up fine. It's also possible the whole thing is buggered.\n\nIt's quite common for them to get cold solder joints (broken joints) on the power connector and reflowing them can fix the charging issue.\n\n_TLDR; This was the issue, reflowed the joints, replaced a swollen battery and it works. You don't need to read the rest now_\n\n## Powering the console\n\nSadly I don't have a 3DS charger, both the charging dock and the console use this bespoke connector.\n\nYou can however modify it to use USB so I decided, whilst testing, to do that. If I can get it all to work I may invest in a proper charger.\n\nOpening the dock was easy enough, just a few tri-wing screws. Interestingly the console itself uses normal Phillips head screws. You would have thought Nintendo would have used the tri-wing on the device with all the complicated hardware that they wouldn't want people snooping in on, not an empty plastic box.\n\n{% fancybox /images/ds3-nopower/dock.jpg \"Dock screws\" %}\n\nIt's worth noting that once inside there are three little legs with springs on the bottom. These help hold the DS in place. If you open the dock at an angle these can easily fall out.\n\n{% fancybox /images/ds3-nopower/dock-open.jpg \"Dock springs\" %}\n\nOnce in there is a tiny circuit board with nice big solder points that even have polarity marked for us, soldering up the cable was nice and simple.\n\n{% fancybox /images/ds3-nopower/dock-con.JPG \"Solder points\" %}\n{% fancybox /images/ds3-nopower/dock-connector.JPG \"Dock connector with markings\" %}\n\nWith that done it was time to test the console. After re-assembly, as expected, nothing happened. No orange light. No power. Nothing.\n\nI checked the docks pins with a multi-meter to be sure and was reading 5V with the correct polarity.\n\nSeems the issue is within the console.\n\n## Disassembly\n\nTaking the 3DS apart is quite easy, just a dozen small Phillips head screws.\n\nFirst are the screws holding the battery cover in. These have a locking clip on the back so they can't be removed from the cover, stopping them from getting lost\n\n{% fancybox /images/ds3-nopower/back.JPG \"Battery cover\" %}\n\nOnce removed it's just a few more screws to remove the backplate. Note the silver screw visible inside the cart slot (the circle at the top of the image).\n\n{% fancybox /images/ds3-nopower/under-bat-cover.JPG \"Backplate screws\" %}\n\nAfter removing the battery the backplate can carefully be lifted.\n\n**BE CAREFUL** the shoulder buttons are connected with two small ribbon cables and these will get pulled if you are heavy handed.\n\n{% fancybox /images/ds3-nopower/ribbons.JPG \"Shoulder ribbons (Picture taken after the repair)\" %}\n\n## Repair\n\nWith access granted we can begin investigation. The first thing to check is that power is getting into the console. It's quite common for cold solder joints on the connector. I did a continuity test between the gold pins on either side and the edge of the solder pad on the PCB.\n\nI got no continuity. After scraping slightly on the solder pad to be sure no oxidisation or flux is stopping the connection there was still no continuity.\n\nReflowing all the pins with fresh solder and checking again we now have continuity.\n\n{% fancybox /images/ds3-nopower/repair.JPG \"Repaired connector\" %}\n\nAfter partially re-assembling and testing in the dock we have an orange light!\n\n{% fancybox /images/butwait.jpg \"But Wait, There's More!\" %}\n\n...Then 5 seconds later the orange light turned off.\n\nRemove it from the charger, put it back in, orange light on, 5 seconds and orange light off.\n\n## The battery\n\nTaking a closer look at the battery it seemed obvious, not too sure how I missed it. The thing is quite swollen.\n\n{% fancybox /images/ds3-nopower/batteryswell.gif \"Battery Swell\" %}\n\nNot too sure how a battery with such damage would respond to charging (besides with fire) so maybe the DS has detected this and refuses to charge?\n\nTried to power the console on mains without a battery and got the same behavior. A day later and a new battery and we have an orange light, and it stays on!\n\n{% fancybox /images/ds3-nopower/charge.JPG \"Charging light\" %}\n\n## To finish up\n\nSo we had cold solder joints on the power connector, applied fresh solder fixed that problem. We also had a swollen battery, replacing that and the console is as good as new.\n\n{% fancybox /images/ds3-nopower/working.JPG \"It's Alive\" %}\n","source":"_posts/3DS-no-power.md","raw":"---\ntitle: 3DS - Not powering on\ntags:\n  - 3DS\nimage: /images/ds3-nopower/ribbons.JPG\n---\n\nBeen waiting on a few PCB's to arrive for my PSP Consolizer project so thought I'd waste the time fixing the pile of broken consoles I've got.\n\nThe newest addition was a 3DS which would not power on or charge.\n\n<!-- more -->\n\n# The Problem\n\nQuite simply it would not power on, or charge. No other information was provided. It's possible the fault could be with the DC-in side of things and with a charged battery it will power up fine. It's also possible the whole thing is buggered.\n\nIt's quite common for them to get cold solder joints (broken joints) on the power connector and reflowing them can fix the charging issue.\n\n_TLDR; This was the issue, reflowed the joints, replaced a swollen battery and it works. You don't need to read the rest now_\n\n## Powering the console\n\nSadly I don't have a 3DS charger, both the charging dock and the console use this bespoke connector.\n\nYou can however modify it to use USB so I decided, whilst testing, to do that. If I can get it all to work I may invest in a proper charger.\n\nOpening the dock was easy enough, just a few tri-wing screws. Interestingly the console itself uses normal Phillips head screws. You would have thought Nintendo would have used the tri-wing on the device with all the complicated hardware that they wouldn't want people snooping in on, not an empty plastic box.\n\n{% fancybox /images/ds3-nopower/dock.jpg \"Dock screws\" %}\n\nIt's worth noting that once inside there are three little legs with springs on the bottom. These help hold the DS in place. If you open the dock at an angle these can easily fall out.\n\n{% fancybox /images/ds3-nopower/dock-open.jpg \"Dock springs\" %}\n\nOnce in there is a tiny circuit board with nice big solder points that even have polarity marked for us, soldering up the cable was nice and simple.\n\n{% fancybox /images/ds3-nopower/dock-con.JPG \"Solder points\" %}\n{% fancybox /images/ds3-nopower/dock-connector.JPG \"Dock connector with markings\" %}\n\nWith that done it was time to test the console. After re-assembly, as expected, nothing happened. No orange light. No power. Nothing.\n\nI checked the docks pins with a multi-meter to be sure and was reading 5V with the correct polarity.\n\nSeems the issue is within the console.\n\n## Disassembly\n\nTaking the 3DS apart is quite easy, just a dozen small Phillips head screws.\n\nFirst are the screws holding the battery cover in. These have a locking clip on the back so they can't be removed from the cover, stopping them from getting lost\n\n{% fancybox /images/ds3-nopower/back.JPG \"Battery cover\" %}\n\nOnce removed it's just a few more screws to remove the backplate. Note the silver screw visible inside the cart slot (the circle at the top of the image).\n\n{% fancybox /images/ds3-nopower/under-bat-cover.JPG \"Backplate screws\" %}\n\nAfter removing the battery the backplate can carefully be lifted.\n\n**BE CAREFUL** the shoulder buttons are connected with two small ribbon cables and these will get pulled if you are heavy handed.\n\n{% fancybox /images/ds3-nopower/ribbons.JPG \"Shoulder ribbons (Picture taken after the repair)\" %}\n\n## Repair\n\nWith access granted we can begin investigation. The first thing to check is that power is getting into the console. It's quite common for cold solder joints on the connector. I did a continuity test between the gold pins on either side and the edge of the solder pad on the PCB.\n\nI got no continuity. After scraping slightly on the solder pad to be sure no oxidisation or flux is stopping the connection there was still no continuity.\n\nReflowing all the pins with fresh solder and checking again we now have continuity.\n\n{% fancybox /images/ds3-nopower/repair.JPG \"Repaired connector\" %}\n\nAfter partially re-assembling and testing in the dock we have an orange light!\n\n{% fancybox /images/butwait.jpg \"But Wait, There's More!\" %}\n\n...Then 5 seconds later the orange light turned off.\n\nRemove it from the charger, put it back in, orange light on, 5 seconds and orange light off.\n\n## The battery\n\nTaking a closer look at the battery it seemed obvious, not too sure how I missed it. The thing is quite swollen.\n\n{% fancybox /images/ds3-nopower/batteryswell.gif \"Battery Swell\" %}\n\nNot too sure how a battery with such damage would respond to charging (besides with fire) so maybe the DS has detected this and refuses to charge?\n\nTried to power the console on mains without a battery and got the same behavior. A day later and a new battery and we have an orange light, and it stays on!\n\n{% fancybox /images/ds3-nopower/charge.JPG \"Charging light\" %}\n\n## To finish up\n\nSo we had cold solder joints on the power connector, applied fresh solder fixed that problem. We also had a swollen battery, replacing that and the console is as good as new.\n\n{% fancybox /images/ds3-nopower/working.JPG \"It's Alive\" %}\n","slug":"3DS-no-power","published":1,"date":"2023-01-22T21:10:59.923Z","updated":"2023-01-25T14:18:22.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliea35bn0004mkue70b054jb","content":"<p>Been waiting on a few PCB’s to arrive for my PSP Consolizer project so thought I’d waste the time fixing the pile of broken consoles I’ve got.</p>\n<p>The newest addition was a 3DS which would not power on or charge.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"The-Problem\"><a href=\"#The-Problem\" class=\"headerlink\" title=\"The Problem\"></a>The Problem</h1><p>Quite simply it would not power on, or charge. No other information was provided. It’s possible the fault could be with the DC-in side of things and with a charged battery it will power up fine. It’s also possible the whole thing is buggered.</p>\n<p>It’s quite common for them to get cold solder joints (broken joints) on the power connector and reflowing them can fix the charging issue.</p>\n<p><em>TLDR; This was the issue, reflowed the joints, replaced a swollen battery and it works. You don’t need to read the rest now</em></p>\n<h2 id=\"Powering-the-console\"><a href=\"#Powering-the-console\" class=\"headerlink\" title=\"Powering the console\"></a>Powering the console</h2><p>Sadly I don’t have a 3DS charger, both the charging dock and the console use this bespoke connector.</p>\n<p>You can however modify it to use USB so I decided, whilst testing, to do that. If I can get it all to work I may invest in a proper charger.</p>\n<p>Opening the dock was easy enough, just a few tri-wing screws. Interestingly the console itself uses normal Phillips head screws. You would have thought Nintendo would have used the tri-wing on the device with all the complicated hardware that they wouldn’t want people snooping in on, not an empty plastic box.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/dock.jpg\"\n    title=\"Dock screws\"\n  >\n    <img\n      src=\"/images/ds3-nopower/dock.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Dock screws\" />\n  </a>\n\n  <span class=\"caption \">\n    Dock screws\n  </span>\n\n\n<p>It’s worth noting that once inside there are three little legs with springs on the bottom. These help hold the DS in place. If you open the dock at an angle these can easily fall out.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/dock-open.jpg\"\n    title=\"Dock springs\"\n  >\n    <img\n      src=\"/images/ds3-nopower/dock-open.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Dock springs\" />\n  </a>\n\n  <span class=\"caption \">\n    Dock springs\n  </span>\n\n\n<p>Once in there is a tiny circuit board with nice big solder points that even have polarity marked for us, soldering up the cable was nice and simple.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/dock-con.JPG\"\n    title=\"Solder points\"\n  >\n    <img\n      src=\"/images/ds3-nopower/dock-con.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Solder points\" />\n  </a>\n\n  <span class=\"caption \">\n    Solder points\n  </span>\n\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/dock-connector.JPG\"\n    title=\"Dock connector with markings\"\n  >\n    <img\n      src=\"/images/ds3-nopower/dock-connector.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Dock connector with markings\" />\n  </a>\n\n  <span class=\"caption \">\n    Dock connector with markings\n  </span>\n\n\n<p>With that done it was time to test the console. After re-assembly, as expected, nothing happened. No orange light. No power. Nothing.</p>\n<p>I checked the docks pins with a multi-meter to be sure and was reading 5V with the correct polarity.</p>\n<p>Seems the issue is within the console.</p>\n<h2 id=\"Disassembly\"><a href=\"#Disassembly\" class=\"headerlink\" title=\"Disassembly\"></a>Disassembly</h2><p>Taking the 3DS apart is quite easy, just a dozen small Phillips head screws.</p>\n<p>First are the screws holding the battery cover in. These have a locking clip on the back so they can’t be removed from the cover, stopping them from getting lost</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/back.JPG\"\n    title=\"Battery cover\"\n  >\n    <img\n      src=\"/images/ds3-nopower/back.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Battery cover\" />\n  </a>\n\n  <span class=\"caption \">\n    Battery cover\n  </span>\n\n\n<p>Once removed it’s just a few more screws to remove the backplate. Note the silver screw visible inside the cart slot (the circle at the top of the image).</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/under-bat-cover.JPG\"\n    title=\"Backplate screws\"\n  >\n    <img\n      src=\"/images/ds3-nopower/under-bat-cover.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Backplate screws\" />\n  </a>\n\n  <span class=\"caption \">\n    Backplate screws\n  </span>\n\n\n<p>After removing the battery the backplate can carefully be lifted.</p>\n<p><strong>BE CAREFUL</strong> the shoulder buttons are connected with two small ribbon cables and these will get pulled if you are heavy handed.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/ribbons.JPG\"\n    title=\"Shoulder ribbons (Picture taken after the repair)\"\n  >\n    <img\n      src=\"/images/ds3-nopower/ribbons.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Shoulder ribbons (Picture taken after the repair)\" />\n  </a>\n\n  <span class=\"caption \">\n    Shoulder ribbons (Picture taken after the repair)\n  </span>\n\n\n<h2 id=\"Repair\"><a href=\"#Repair\" class=\"headerlink\" title=\"Repair\"></a>Repair</h2><p>With access granted we can begin investigation. The first thing to check is that power is getting into the console. It’s quite common for cold solder joints on the connector. I did a continuity test between the gold pins on either side and the edge of the solder pad on the PCB.</p>\n<p>I got no continuity. After scraping slightly on the solder pad to be sure no oxidisation or flux is stopping the connection there was still no continuity.</p>\n<p>Reflowing all the pins with fresh solder and checking again we now have continuity.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/repair.JPG\"\n    title=\"Repaired connector\"\n  >\n    <img\n      src=\"/images/ds3-nopower/repair.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Repaired connector\" />\n  </a>\n\n  <span class=\"caption \">\n    Repaired connector\n  </span>\n\n\n<p>After partially re-assembling and testing in the dock we have an orange light!</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/butwait.jpg\"\n    title=\"But Wait, There's More!\"\n  >\n    <img\n      src=\"/images/butwait.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"But Wait, There's More!\" />\n  </a>\n\n  <span class=\"caption \">\n    But Wait, There's More!\n  </span>\n\n\n<p>…Then 5 seconds later the orange light turned off.</p>\n<p>Remove it from the charger, put it back in, orange light on, 5 seconds and orange light off.</p>\n<h2 id=\"The-battery\"><a href=\"#The-battery\" class=\"headerlink\" title=\"The battery\"></a>The battery</h2><p>Taking a closer look at the battery it seemed obvious, not too sure how I missed it. The thing is quite swollen.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/batteryswell.gif\"\n    title=\"Battery Swell\"\n  >\n    <img\n      src=\"/images/ds3-nopower/batteryswell.gif\"\n      style=\"max-width: 300px\"\n      alt=\"Battery Swell\" />\n  </a>\n\n  <span class=\"caption \">\n    Battery Swell\n  </span>\n\n\n<p>Not too sure how a battery with such damage would respond to charging (besides with fire) so maybe the DS has detected this and refuses to charge?</p>\n<p>Tried to power the console on mains without a battery and got the same behavior. A day later and a new battery and we have an orange light, and it stays on!</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/charge.JPG\"\n    title=\"Charging light\"\n  >\n    <img\n      src=\"/images/ds3-nopower/charge.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Charging light\" />\n  </a>\n\n  <span class=\"caption \">\n    Charging light\n  </span>\n\n\n<h2 id=\"To-finish-up\"><a href=\"#To-finish-up\" class=\"headerlink\" title=\"To finish up\"></a>To finish up</h2><p>So we had cold solder joints on the power connector, applied fresh solder fixed that problem. We also had a swollen battery, replacing that and the console is as good as new.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/working.JPG\"\n    title=\"It's Alive\"\n  >\n    <img\n      src=\"/images/ds3-nopower/working.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"It's Alive\" />\n  </a>\n\n  <span class=\"caption \">\n    It's Alive\n  </span>\n\n","site":{"data":{}},"excerpt":"<p>Been waiting on a few PCB’s to arrive for my PSP Consolizer project so thought I’d waste the time fixing the pile of broken consoles I’ve got.</p>\n<p>The newest addition was a 3DS which would not power on or charge.</p>","more":"<h1 id=\"The-Problem\"><a href=\"#The-Problem\" class=\"headerlink\" title=\"The Problem\"></a>The Problem</h1><p>Quite simply it would not power on, or charge. No other information was provided. It’s possible the fault could be with the DC-in side of things and with a charged battery it will power up fine. It’s also possible the whole thing is buggered.</p>\n<p>It’s quite common for them to get cold solder joints (broken joints) on the power connector and reflowing them can fix the charging issue.</p>\n<p><em>TLDR; This was the issue, reflowed the joints, replaced a swollen battery and it works. You don’t need to read the rest now</em></p>\n<h2 id=\"Powering-the-console\"><a href=\"#Powering-the-console\" class=\"headerlink\" title=\"Powering the console\"></a>Powering the console</h2><p>Sadly I don’t have a 3DS charger, both the charging dock and the console use this bespoke connector.</p>\n<p>You can however modify it to use USB so I decided, whilst testing, to do that. If I can get it all to work I may invest in a proper charger.</p>\n<p>Opening the dock was easy enough, just a few tri-wing screws. Interestingly the console itself uses normal Phillips head screws. You would have thought Nintendo would have used the tri-wing on the device with all the complicated hardware that they wouldn’t want people snooping in on, not an empty plastic box.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/dock.jpg\"\n    title=\"Dock screws\"\n  >\n    <img\n      src=\"/images/ds3-nopower/dock.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Dock screws\" />\n  </a>\n\n  <span class=\"caption \">\n    Dock screws\n  </span>\n\n\n<p>It’s worth noting that once inside there are three little legs with springs on the bottom. These help hold the DS in place. If you open the dock at an angle these can easily fall out.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/dock-open.jpg\"\n    title=\"Dock springs\"\n  >\n    <img\n      src=\"/images/ds3-nopower/dock-open.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Dock springs\" />\n  </a>\n\n  <span class=\"caption \">\n    Dock springs\n  </span>\n\n\n<p>Once in there is a tiny circuit board with nice big solder points that even have polarity marked for us, soldering up the cable was nice and simple.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/dock-con.JPG\"\n    title=\"Solder points\"\n  >\n    <img\n      src=\"/images/ds3-nopower/dock-con.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Solder points\" />\n  </a>\n\n  <span class=\"caption \">\n    Solder points\n  </span>\n\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/dock-connector.JPG\"\n    title=\"Dock connector with markings\"\n  >\n    <img\n      src=\"/images/ds3-nopower/dock-connector.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Dock connector with markings\" />\n  </a>\n\n  <span class=\"caption \">\n    Dock connector with markings\n  </span>\n\n\n<p>With that done it was time to test the console. After re-assembly, as expected, nothing happened. No orange light. No power. Nothing.</p>\n<p>I checked the docks pins with a multi-meter to be sure and was reading 5V with the correct polarity.</p>\n<p>Seems the issue is within the console.</p>\n<h2 id=\"Disassembly\"><a href=\"#Disassembly\" class=\"headerlink\" title=\"Disassembly\"></a>Disassembly</h2><p>Taking the 3DS apart is quite easy, just a dozen small Phillips head screws.</p>\n<p>First are the screws holding the battery cover in. These have a locking clip on the back so they can’t be removed from the cover, stopping them from getting lost</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/back.JPG\"\n    title=\"Battery cover\"\n  >\n    <img\n      src=\"/images/ds3-nopower/back.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Battery cover\" />\n  </a>\n\n  <span class=\"caption \">\n    Battery cover\n  </span>\n\n\n<p>Once removed it’s just a few more screws to remove the backplate. Note the silver screw visible inside the cart slot (the circle at the top of the image).</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/under-bat-cover.JPG\"\n    title=\"Backplate screws\"\n  >\n    <img\n      src=\"/images/ds3-nopower/under-bat-cover.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Backplate screws\" />\n  </a>\n\n  <span class=\"caption \">\n    Backplate screws\n  </span>\n\n\n<p>After removing the battery the backplate can carefully be lifted.</p>\n<p><strong>BE CAREFUL</strong> the shoulder buttons are connected with two small ribbon cables and these will get pulled if you are heavy handed.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/ribbons.JPG\"\n    title=\"Shoulder ribbons (Picture taken after the repair)\"\n  >\n    <img\n      src=\"/images/ds3-nopower/ribbons.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Shoulder ribbons (Picture taken after the repair)\" />\n  </a>\n\n  <span class=\"caption \">\n    Shoulder ribbons (Picture taken after the repair)\n  </span>\n\n\n<h2 id=\"Repair\"><a href=\"#Repair\" class=\"headerlink\" title=\"Repair\"></a>Repair</h2><p>With access granted we can begin investigation. The first thing to check is that power is getting into the console. It’s quite common for cold solder joints on the connector. I did a continuity test between the gold pins on either side and the edge of the solder pad on the PCB.</p>\n<p>I got no continuity. After scraping slightly on the solder pad to be sure no oxidisation or flux is stopping the connection there was still no continuity.</p>\n<p>Reflowing all the pins with fresh solder and checking again we now have continuity.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/repair.JPG\"\n    title=\"Repaired connector\"\n  >\n    <img\n      src=\"/images/ds3-nopower/repair.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Repaired connector\" />\n  </a>\n\n  <span class=\"caption \">\n    Repaired connector\n  </span>\n\n\n<p>After partially re-assembling and testing in the dock we have an orange light!</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/butwait.jpg\"\n    title=\"But Wait, There's More!\"\n  >\n    <img\n      src=\"/images/butwait.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"But Wait, There's More!\" />\n  </a>\n\n  <span class=\"caption \">\n    But Wait, There's More!\n  </span>\n\n\n<p>…Then 5 seconds later the orange light turned off.</p>\n<p>Remove it from the charger, put it back in, orange light on, 5 seconds and orange light off.</p>\n<h2 id=\"The-battery\"><a href=\"#The-battery\" class=\"headerlink\" title=\"The battery\"></a>The battery</h2><p>Taking a closer look at the battery it seemed obvious, not too sure how I missed it. The thing is quite swollen.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/batteryswell.gif\"\n    title=\"Battery Swell\"\n  >\n    <img\n      src=\"/images/ds3-nopower/batteryswell.gif\"\n      style=\"max-width: 300px\"\n      alt=\"Battery Swell\" />\n  </a>\n\n  <span class=\"caption \">\n    Battery Swell\n  </span>\n\n\n<p>Not too sure how a battery with such damage would respond to charging (besides with fire) so maybe the DS has detected this and refuses to charge?</p>\n<p>Tried to power the console on mains without a battery and got the same behavior. A day later and a new battery and we have an orange light, and it stays on!</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/charge.JPG\"\n    title=\"Charging light\"\n  >\n    <img\n      src=\"/images/ds3-nopower/charge.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"Charging light\" />\n  </a>\n\n  <span class=\"caption \">\n    Charging light\n  </span>\n\n\n<h2 id=\"To-finish-up\"><a href=\"#To-finish-up\" class=\"headerlink\" title=\"To finish up\"></a>To finish up</h2><p>So we had cold solder joints on the power connector, applied fresh solder fixed that problem. We also had a swollen battery, replacing that and the console is as good as new.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/ds3-nopower/working.JPG\"\n    title=\"It's Alive\"\n  >\n    <img\n      src=\"/images/ds3-nopower/working.JPG\"\n      style=\"max-width: 300px\"\n      alt=\"It's Alive\" />\n  </a>\n\n  <span class=\"caption \">\n    It's Alive\n  </span>"},{"title":"PSP Internal Consolizer - Fitting FPCs","image":"/images/fitting fpcs/finaldesign2.png","_content":"\nI left my last post with a plan, to print and test fit some FPC's.\n\nIt didn't go that well.\n\n{% fancybox \"/images/fitting fpcs/finaldesign2.png\" \"The final custom FPC design\" %}\n\n<!-- more -->\n\n# To recap\n\nSo for my internal Consolizer project one of the most difficult parts is going to be intercepting the button presses.\n\nI need to allow the original buttons to work but also allow the Arduino to trigger button presses, potentially at the same time.\n\nThe original plan was to build small adapter FPC's. These would sit in between the PSP's original FPC and its motherboard. Thus giving us our hook to tap into those signals.\n\nAfter numerous design iterations (lots of printing and cutting and making tiny changes) I've concluded I just can't make that work. There isn't enough space.\n\n{% fancybox \"/images/fitting fpcs/adapter1.png\" \"First Buttons Design\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter4.jpg\" \"First Buttons Test Fit\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter2.png\" \"First Analog Stick Design\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter3.jpg\" \"First Analog Stick Test Fit\" %}\n\n# The Solution\n\nWell if I can't intercept the signals what can I do? The idea I stopped on was to replace the PSP's FPC's entirely. One for the left and one for the right.\n\nThey aren't complex and that would allow me to intercept the signals in any way I want.\n\nThe left FPC is smaller and simpler so started with that.\n\n{% fancybox \"/images/fitting fpcs/customfpc1.jpg\" \"First attempts at recreating the FPC shape\" %}\n\nMuch like the adapters the process of re-creating the original involved lots of printing to paper, cutting out and offering up to the PSP.\n\nThere must have been at least a dozen attempts before everything fitted nicely and the button footprints lined up.\n\n{% fancybox \"/images/fitting fpcs/customfpc3.jpg\" \"Buttons seemed to line up\" %}\n\n{% fancybox \"/images/fitting fpcs/customfpc2.jpg\" \"Even the shoulder button lined up\" %}\n\nOnce the board layout was right there was another problem.\n\n# The Buttons\n\nMost controller buttons work with an exposed footprint on the PCB and a carbon pad embedded within the button rubber. This causes a short when the button is pressed and triggers a signal.\n\nThe PSP does this, but differently. The FPC is dual layer. The bottom layer has the footprint, the top layer the carbon pad. It's all self contained.\n\n{% fancybox \"/images/fitting fpcs/originalfpc.jpg\" \"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\" %}\n\nThis probably makes it more robust, stops buttons failing to register when they get old. It also makes it very difficult to replicate. I'm not even sure it's possible for a DIYer.\n\nSo I had to find an alternative. I settled upon micro tactile switches like those used in the Gameboy SP.\n\nThey can come in a wide range of sizes so I just needed to measure the height of the original button rubbers and find a switch as close to that as I could.\n\n{% fancybox \"/images/fitting fpcs/finaldesign1.jpg\" \"Custom left button FPC out on paper\" %}\n\n{% fancybox \"/images/fitting fpcs/finaldesign2.png\" \"The final custom FPC design\" %}\n\n# Final Stretch\n\nSo with the problems addressed I thought I could go ahead and have my FPC made. I had spent hours printing and test fitting; found the right tactile switches it was all good to go.\n\nYea it didn't work out like that.\n\nThe cheapest quote I got was from OSHPark, about $35. Not amazing but not out of my reach.\n\nSadly the cheapest tracking shipment on top of that was around another $35.\n\nAll in so far were around £57. Getting a bit rich for my tastes but I was tempted.\n\nThe nail in the coffin was VAT. I have no idea if this is Brexit shafting us, an odd EU thing or just the way it is. But OSHPark doesn't seem to handle VAT properly anymore.\n\nI've read multiple accounts on Twitter of overseas customers paying VAT at checkout, but then when goods arrive getting customs charges. They end up paying VAT twice and handling fees.\n\nAll that added up would put it way out of my price range.\n\n# To Finish Up\n\nSo, if you're still here, we have a nicely designed replacement FPC for the left buttons. A solution for the dual layer carbon pad contacts thing. It's all been test fitted and _should_ work, I just can't afford to have them made.\n\nNot wanting this to hold up my entire project Iv'e thought about a hack of a workaround.\n\nI'm going to use my re-designed FPC as a template (printed to paper) and hot glue the tact switches into place. I'll chop in half a cheap FFC cable and solder its wires directly to the tact switches.\n\nIt's not amazing but it will (i think) work and get me going again. I don't want to be hung up on this custom FPC issue.\n\nThe other benefit is someone attempting to build this in the future has options, they could have the custom FPC's made for a more professional finish or if there skint like me do this DIY solution instead.\n","source":"_posts/PSP-Internal-Consolizer-Fitting-FPCs.md","raw":"---\ntitle: PSP Internal Consolizer - Fitting FPCs\ntags:\n  - psp\n  - psp-consolizer\nimage: /images/fitting fpcs/finaldesign2.png\n---\n\nI left my last post with a plan, to print and test fit some FPC's.\n\nIt didn't go that well.\n\n{% fancybox \"/images/fitting fpcs/finaldesign2.png\" \"The final custom FPC design\" %}\n\n<!-- more -->\n\n# To recap\n\nSo for my internal Consolizer project one of the most difficult parts is going to be intercepting the button presses.\n\nI need to allow the original buttons to work but also allow the Arduino to trigger button presses, potentially at the same time.\n\nThe original plan was to build small adapter FPC's. These would sit in between the PSP's original FPC and its motherboard. Thus giving us our hook to tap into those signals.\n\nAfter numerous design iterations (lots of printing and cutting and making tiny changes) I've concluded I just can't make that work. There isn't enough space.\n\n{% fancybox \"/images/fitting fpcs/adapter1.png\" \"First Buttons Design\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter4.jpg\" \"First Buttons Test Fit\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter2.png\" \"First Analog Stick Design\" %}\n\n{% fancybox \"/images/fitting fpcs/adapter3.jpg\" \"First Analog Stick Test Fit\" %}\n\n# The Solution\n\nWell if I can't intercept the signals what can I do? The idea I stopped on was to replace the PSP's FPC's entirely. One for the left and one for the right.\n\nThey aren't complex and that would allow me to intercept the signals in any way I want.\n\nThe left FPC is smaller and simpler so started with that.\n\n{% fancybox \"/images/fitting fpcs/customfpc1.jpg\" \"First attempts at recreating the FPC shape\" %}\n\nMuch like the adapters the process of re-creating the original involved lots of printing to paper, cutting out and offering up to the PSP.\n\nThere must have been at least a dozen attempts before everything fitted nicely and the button footprints lined up.\n\n{% fancybox \"/images/fitting fpcs/customfpc3.jpg\" \"Buttons seemed to line up\" %}\n\n{% fancybox \"/images/fitting fpcs/customfpc2.jpg\" \"Even the shoulder button lined up\" %}\n\nOnce the board layout was right there was another problem.\n\n# The Buttons\n\nMost controller buttons work with an exposed footprint on the PCB and a carbon pad embedded within the button rubber. This causes a short when the button is pressed and triggers a signal.\n\nThe PSP does this, but differently. The FPC is dual layer. The bottom layer has the footprint, the top layer the carbon pad. It's all self contained.\n\n{% fancybox \"/images/fitting fpcs/originalfpc.jpg\" \"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\" %}\n\nThis probably makes it more robust, stops buttons failing to register when they get old. It also makes it very difficult to replicate. I'm not even sure it's possible for a DIYer.\n\nSo I had to find an alternative. I settled upon micro tactile switches like those used in the Gameboy SP.\n\nThey can come in a wide range of sizes so I just needed to measure the height of the original button rubbers and find a switch as close to that as I could.\n\n{% fancybox \"/images/fitting fpcs/finaldesign1.jpg\" \"Custom left button FPC out on paper\" %}\n\n{% fancybox \"/images/fitting fpcs/finaldesign2.png\" \"The final custom FPC design\" %}\n\n# Final Stretch\n\nSo with the problems addressed I thought I could go ahead and have my FPC made. I had spent hours printing and test fitting; found the right tactile switches it was all good to go.\n\nYea it didn't work out like that.\n\nThe cheapest quote I got was from OSHPark, about $35. Not amazing but not out of my reach.\n\nSadly the cheapest tracking shipment on top of that was around another $35.\n\nAll in so far were around £57. Getting a bit rich for my tastes but I was tempted.\n\nThe nail in the coffin was VAT. I have no idea if this is Brexit shafting us, an odd EU thing or just the way it is. But OSHPark doesn't seem to handle VAT properly anymore.\n\nI've read multiple accounts on Twitter of overseas customers paying VAT at checkout, but then when goods arrive getting customs charges. They end up paying VAT twice and handling fees.\n\nAll that added up would put it way out of my price range.\n\n# To Finish Up\n\nSo, if you're still here, we have a nicely designed replacement FPC for the left buttons. A solution for the dual layer carbon pad contacts thing. It's all been test fitted and _should_ work, I just can't afford to have them made.\n\nNot wanting this to hold up my entire project Iv'e thought about a hack of a workaround.\n\nI'm going to use my re-designed FPC as a template (printed to paper) and hot glue the tact switches into place. I'll chop in half a cheap FFC cable and solder its wires directly to the tact switches.\n\nIt's not amazing but it will (i think) work and get me going again. I don't want to be hung up on this custom FPC issue.\n\nThe other benefit is someone attempting to build this in the future has options, they could have the custom FPC's made for a more professional finish or if there skint like me do this DIY solution instead.\n","slug":"PSP-Internal-Consolizer-Fitting-FPCs","published":1,"date":"2023-01-08T20:27:21.061Z","updated":"2023-01-10T10:23:55.959Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliea35bo0005mkue2w2g2afw","content":"<p>I left my last post with a plan, to print and test fit some FPC’s.</p>\n<p>It didn’t go that well.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign2.png\"\n    title=\"The final custom FPC design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign2.png\"\n      style=\"max-width: 300px\"\n      alt=\"The final custom FPC design\" />\n  </a>\n\n  <span class=\"caption \">\n    The final custom FPC design\n  </span>\n\n\n<span id=\"more\"></span>\n\n<h1 id=\"To-recap\"><a href=\"#To-recap\" class=\"headerlink\" title=\"To recap\"></a>To recap</h1><p>So for my internal Consolizer project one of the most difficult parts is going to be intercepting the button presses.</p>\n<p>I need to allow the original buttons to work but also allow the Arduino to trigger button presses, potentially at the same time.</p>\n<p>The original plan was to build small adapter FPC’s. These would sit in between the PSP’s original FPC and its motherboard. Thus giving us our hook to tap into those signals.</p>\n<p>After numerous design iterations (lots of printing and cutting and making tiny changes) I’ve concluded I just can’t make that work. There isn’t enough space.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter1.png\"\n    title=\"First Buttons Design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter1.png\"\n      style=\"max-width: 300px\"\n      alt=\"First Buttons Design\" />\n  </a>\n\n  <span class=\"caption \">\n    First Buttons Design\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter4.jpg\"\n    title=\"First Buttons Test Fit\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter4.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First Buttons Test Fit\" />\n  </a>\n\n  <span class=\"caption \">\n    First Buttons Test Fit\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter2.png\"\n    title=\"First Analog Stick Design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter2.png\"\n      style=\"max-width: 300px\"\n      alt=\"First Analog Stick Design\" />\n  </a>\n\n  <span class=\"caption \">\n    First Analog Stick Design\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter3.jpg\"\n    title=\"First Analog Stick Test Fit\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter3.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First Analog Stick Test Fit\" />\n  </a>\n\n  <span class=\"caption \">\n    First Analog Stick Test Fit\n  </span>\n\n\n<h1 id=\"The-Solution\"><a href=\"#The-Solution\" class=\"headerlink\" title=\"The Solution\"></a>The Solution</h1><p>Well if I can’t intercept the signals what can I do? The idea I stopped on was to replace the PSP’s FPC’s entirely. One for the left and one for the right.</p>\n<p>They aren’t complex and that would allow me to intercept the signals in any way I want.</p>\n<p>The left FPC is smaller and simpler so started with that.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc1.jpg\"\n    title=\"First attempts at recreating the FPC shape\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc1.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First attempts at recreating the FPC shape\" />\n  </a>\n\n  <span class=\"caption \">\n    First attempts at recreating the FPC shape\n  </span>\n\n\n<p>Much like the adapters the process of re-creating the original involved lots of printing to paper, cutting out and offering up to the PSP.</p>\n<p>There must have been at least a dozen attempts before everything fitted nicely and the button footprints lined up.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc3.jpg\"\n    title=\"Buttons seemed to line up\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc3.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Buttons seemed to line up\" />\n  </a>\n\n  <span class=\"caption \">\n    Buttons seemed to line up\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc2.jpg\"\n    title=\"Even the shoulder button lined up\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc2.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Even the shoulder button lined up\" />\n  </a>\n\n  <span class=\"caption \">\n    Even the shoulder button lined up\n  </span>\n\n\n<p>Once the board layout was right there was another problem.</p>\n<h1 id=\"The-Buttons\"><a href=\"#The-Buttons\" class=\"headerlink\" title=\"The Buttons\"></a>The Buttons</h1><p>Most controller buttons work with an exposed footprint on the PCB and a carbon pad embedded within the button rubber. This causes a short when the button is pressed and triggers a signal.</p>\n<p>The PSP does this, but differently. The FPC is dual layer. The bottom layer has the footprint, the top layer the carbon pad. It’s all self contained.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/originalfpc.jpg\"\n    title=\"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\"\n  >\n    <img\n      src=\"/images/fitting fpcs/originalfpc.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\" />\n  </a>\n\n  <span class=\"caption \">\n    The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\n  </span>\n\n\n<p>This probably makes it more robust, stops buttons failing to register when they get old. It also makes it very difficult to replicate. I’m not even sure it’s possible for a DIYer.</p>\n<p>So I had to find an alternative. I settled upon micro tactile switches like those used in the Gameboy SP.</p>\n<p>They can come in a wide range of sizes so I just needed to measure the height of the original button rubbers and find a switch as close to that as I could.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign1.jpg\"\n    title=\"Custom left button FPC out on paper\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign1.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Custom left button FPC out on paper\" />\n  </a>\n\n  <span class=\"caption \">\n    Custom left button FPC out on paper\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign2.png\"\n    title=\"The final custom FPC design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign2.png\"\n      style=\"max-width: 300px\"\n      alt=\"The final custom FPC design\" />\n  </a>\n\n  <span class=\"caption \">\n    The final custom FPC design\n  </span>\n\n\n<h1 id=\"Final-Stretch\"><a href=\"#Final-Stretch\" class=\"headerlink\" title=\"Final Stretch\"></a>Final Stretch</h1><p>So with the problems addressed I thought I could go ahead and have my FPC made. I had spent hours printing and test fitting; found the right tactile switches it was all good to go.</p>\n<p>Yea it didn’t work out like that.</p>\n<p>The cheapest quote I got was from OSHPark, about $35. Not amazing but not out of my reach.</p>\n<p>Sadly the cheapest tracking shipment on top of that was around another $35.</p>\n<p>All in so far were around £57. Getting a bit rich for my tastes but I was tempted.</p>\n<p>The nail in the coffin was VAT. I have no idea if this is Brexit shafting us, an odd EU thing or just the way it is. But OSHPark doesn’t seem to handle VAT properly anymore.</p>\n<p>I’ve read multiple accounts on Twitter of overseas customers paying VAT at checkout, but then when goods arrive getting customs charges. They end up paying VAT twice and handling fees.</p>\n<p>All that added up would put it way out of my price range.</p>\n<h1 id=\"To-Finish-Up\"><a href=\"#To-Finish-Up\" class=\"headerlink\" title=\"To Finish Up\"></a>To Finish Up</h1><p>So, if you’re still here, we have a nicely designed replacement FPC for the left buttons. A solution for the dual layer carbon pad contacts thing. It’s all been test fitted and <em>should</em> work, I just can’t afford to have them made.</p>\n<p>Not wanting this to hold up my entire project Iv’e thought about a hack of a workaround.</p>\n<p>I’m going to use my re-designed FPC as a template (printed to paper) and hot glue the tact switches into place. I’ll chop in half a cheap FFC cable and solder its wires directly to the tact switches.</p>\n<p>It’s not amazing but it will (i think) work and get me going again. I don’t want to be hung up on this custom FPC issue.</p>\n<p>The other benefit is someone attempting to build this in the future has options, they could have the custom FPC’s made for a more professional finish or if there skint like me do this DIY solution instead.</p>\n","site":{"data":{}},"excerpt":"<p>I left my last post with a plan, to print and test fit some FPC’s.</p>\n<p>It didn’t go that well.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign2.png\"\n    title=\"The final custom FPC design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign2.png\"\n      style=\"max-width: 300px\"\n      alt=\"The final custom FPC design\" />\n  </a>\n\n  <span class=\"caption \">\n    The final custom FPC design\n  </span>","more":"<h1 id=\"To-recap\"><a href=\"#To-recap\" class=\"headerlink\" title=\"To recap\"></a>To recap</h1><p>So for my internal Consolizer project one of the most difficult parts is going to be intercepting the button presses.</p>\n<p>I need to allow the original buttons to work but also allow the Arduino to trigger button presses, potentially at the same time.</p>\n<p>The original plan was to build small adapter FPC’s. These would sit in between the PSP’s original FPC and its motherboard. Thus giving us our hook to tap into those signals.</p>\n<p>After numerous design iterations (lots of printing and cutting and making tiny changes) I’ve concluded I just can’t make that work. There isn’t enough space.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter1.png\"\n    title=\"First Buttons Design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter1.png\"\n      style=\"max-width: 300px\"\n      alt=\"First Buttons Design\" />\n  </a>\n\n  <span class=\"caption \">\n    First Buttons Design\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter4.jpg\"\n    title=\"First Buttons Test Fit\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter4.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First Buttons Test Fit\" />\n  </a>\n\n  <span class=\"caption \">\n    First Buttons Test Fit\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter2.png\"\n    title=\"First Analog Stick Design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter2.png\"\n      style=\"max-width: 300px\"\n      alt=\"First Analog Stick Design\" />\n  </a>\n\n  <span class=\"caption \">\n    First Analog Stick Design\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/adapter3.jpg\"\n    title=\"First Analog Stick Test Fit\"\n  >\n    <img\n      src=\"/images/fitting fpcs/adapter3.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First Analog Stick Test Fit\" />\n  </a>\n\n  <span class=\"caption \">\n    First Analog Stick Test Fit\n  </span>\n\n\n<h1 id=\"The-Solution\"><a href=\"#The-Solution\" class=\"headerlink\" title=\"The Solution\"></a>The Solution</h1><p>Well if I can’t intercept the signals what can I do? The idea I stopped on was to replace the PSP’s FPC’s entirely. One for the left and one for the right.</p>\n<p>They aren’t complex and that would allow me to intercept the signals in any way I want.</p>\n<p>The left FPC is smaller and simpler so started with that.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc1.jpg\"\n    title=\"First attempts at recreating the FPC shape\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc1.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"First attempts at recreating the FPC shape\" />\n  </a>\n\n  <span class=\"caption \">\n    First attempts at recreating the FPC shape\n  </span>\n\n\n<p>Much like the adapters the process of re-creating the original involved lots of printing to paper, cutting out and offering up to the PSP.</p>\n<p>There must have been at least a dozen attempts before everything fitted nicely and the button footprints lined up.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc3.jpg\"\n    title=\"Buttons seemed to line up\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc3.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Buttons seemed to line up\" />\n  </a>\n\n  <span class=\"caption \">\n    Buttons seemed to line up\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/customfpc2.jpg\"\n    title=\"Even the shoulder button lined up\"\n  >\n    <img\n      src=\"/images/fitting fpcs/customfpc2.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Even the shoulder button lined up\" />\n  </a>\n\n  <span class=\"caption \">\n    Even the shoulder button lined up\n  </span>\n\n\n<p>Once the board layout was right there was another problem.</p>\n<h1 id=\"The-Buttons\"><a href=\"#The-Buttons\" class=\"headerlink\" title=\"The Buttons\"></a>The Buttons</h1><p>Most controller buttons work with an exposed footprint on the PCB and a carbon pad embedded within the button rubber. This causes a short when the button is pressed and triggers a signal.</p>\n<p>The PSP does this, but differently. The FPC is dual layer. The bottom layer has the footprint, the top layer the carbon pad. It’s all self contained.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/originalfpc.jpg\"\n    title=\"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\"\n  >\n    <img\n      src=\"/images/fitting fpcs/originalfpc.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\" />\n  </a>\n\n  <span class=\"caption \">\n    The original FPC. Image courtesy of Peter Lustig from the PSP Homebrew Discord\n  </span>\n\n\n<p>This probably makes it more robust, stops buttons failing to register when they get old. It also makes it very difficult to replicate. I’m not even sure it’s possible for a DIYer.</p>\n<p>So I had to find an alternative. I settled upon micro tactile switches like those used in the Gameboy SP.</p>\n<p>They can come in a wide range of sizes so I just needed to measure the height of the original button rubbers and find a switch as close to that as I could.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign1.jpg\"\n    title=\"Custom left button FPC out on paper\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign1.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Custom left button FPC out on paper\" />\n  </a>\n\n  <span class=\"caption \">\n    Custom left button FPC out on paper\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/fitting fpcs/finaldesign2.png\"\n    title=\"The final custom FPC design\"\n  >\n    <img\n      src=\"/images/fitting fpcs/finaldesign2.png\"\n      style=\"max-width: 300px\"\n      alt=\"The final custom FPC design\" />\n  </a>\n\n  <span class=\"caption \">\n    The final custom FPC design\n  </span>\n\n\n<h1 id=\"Final-Stretch\"><a href=\"#Final-Stretch\" class=\"headerlink\" title=\"Final Stretch\"></a>Final Stretch</h1><p>So with the problems addressed I thought I could go ahead and have my FPC made. I had spent hours printing and test fitting; found the right tactile switches it was all good to go.</p>\n<p>Yea it didn’t work out like that.</p>\n<p>The cheapest quote I got was from OSHPark, about $35. Not amazing but not out of my reach.</p>\n<p>Sadly the cheapest tracking shipment on top of that was around another $35.</p>\n<p>All in so far were around £57. Getting a bit rich for my tastes but I was tempted.</p>\n<p>The nail in the coffin was VAT. I have no idea if this is Brexit shafting us, an odd EU thing or just the way it is. But OSHPark doesn’t seem to handle VAT properly anymore.</p>\n<p>I’ve read multiple accounts on Twitter of overseas customers paying VAT at checkout, but then when goods arrive getting customs charges. They end up paying VAT twice and handling fees.</p>\n<p>All that added up would put it way out of my price range.</p>\n<h1 id=\"To-Finish-Up\"><a href=\"#To-Finish-Up\" class=\"headerlink\" title=\"To Finish Up\"></a>To Finish Up</h1><p>So, if you’re still here, we have a nicely designed replacement FPC for the left buttons. A solution for the dual layer carbon pad contacts thing. It’s all been test fitted and <em>should</em> work, I just can’t afford to have them made.</p>\n<p>Not wanting this to hold up my entire project Iv’e thought about a hack of a workaround.</p>\n<p>I’m going to use my re-designed FPC as a template (printed to paper) and hot glue the tact switches into place. I’ll chop in half a cheap FFC cable and solder its wires directly to the tact switches.</p>\n<p>It’s not amazing but it will (i think) work and get me going again. I don’t want to be hung up on this custom FPC issue.</p>\n<p>The other benefit is someone attempting to build this in the future has options, they could have the custom FPC’s made for a more professional finish or if there skint like me do this DIY solution instead.</p>"},{"title":"VitaDock+ Manually Apply Aux Audio Feature","image":"/images/vitadockaux/thumb.png","_content":"\nThis little write up documents how to manually apply my feature change to the VitaDock+ project to enable the use of Aux Audio.\n\n<!-- more -->\n\n{% alert warning %}\n**This is not an official process**\n\nIf something does not work please contact me rather than logging an issue on the VitaDock+ repostory. I doubt anyone will see my ramblings but i don't want to cause any extra work for those maintaining the official project!\n\n{% endalert %}\n\n**TLDR;** _Get to the [point](#Lets-do-it)._\n\nThe VitaDock+ is a fantastic project, you can see it [here](https://github.com/SilentNightx/VitaDockPlus).\n\nIt allows you, in combination with some PSVita plugins, to stream audio and video from your PSVita to your telly using a RPi. Essentially it gives you an experience very close to the Nintendo Switch.\n\nWhen combined with a nice pretty little 3D printed dock its a really impressive setup.\n\n{% fancybox https://cdn.thingiverse.com/assets/66/14/a0/e8/7a/featured_preview_David.O_Dock.jpg  \" \" %}\n\n<p style=\"text-align: center\">Image credit to the 3D model creator <a href=\"https://www.thingiverse.com/thing:3942821\">here</a></p>\n\nBy default You are expected to use Bluetooth Audio and pair the PSVita with the RPi. I allong with others on the `VitaDock(+)` Discord server have had issues getting the two to pair. It seems to be very particular about the dongles it will use.\n\nOnce you have managed to pair them you have to manually connect and disconnect the RPi from within the PSVitas settings. This is a rather tedious process IMHO.\n\nI decided to write a feature allowing someone to choose between Bluetooth audio or Aux audio. This feature is currently in a Pull Request (you can view that [here](https://github.com/SilentNightx/VitaDockPlus/pull/32)) however untill that gets merged you can manually apply those changes instead.\n\nRead below to figure out how.\n\n## Lets do it\n\n{% alert info %}\n\nBefore doing this work _don't_ connect the PSVita to the RPi.\n\n{% endalert %}\n\n- Deploy the Experimental VitaDock+ V2 image [here](https://github.com/SilentNightx/VitaDockPlus/releases/)\n  - The Raspberry Pi Imager [here](https://www.raspberrypi.com/software/) can be used.\n- Once deployed insert the SD into your RPi and boot it for the first time. Let it do its first time setup.\n- Now you need to copy the required files onto your RPi, how you do that is upto you (SSH, thumb drive, floppy disk...) however ensure you copy the following files to the RPi\n  - Download the files needed from my fork [here](https://github.com/ste2425/VitaDockPlus/tree/addAuxInput)\n  - Click the green `code` button and select `Download Zip`\n  - Copy the following files over to the pi:\n    | Location in Zip | Location on RPi |\n    | -- | -- |\n    | All the files ending in `.sh` located in `/home/pi` | `/home/pi` |\n    | `vitadock.conf` located in `/home/pi` | `/home/pi` |\n    | `auxAudio.png` located in `/home/pi/Pictures/Icons` | `/home/pi/Pictures/Icons` |\n    | `aucAudioConfigure.png` located in `/home/pi/Pictures/Icons` | `/home/pi/Pictures/Icons` |\n- Once copied you need to take ownership of the `.sh` files and mark them as executable\n  - from a terminal run `cd ~ && sudo chown pi *.sh && chmod +rwx *.sh`\n- Now you need to add the menu items, this is done with the `menulibre` tool\n  - open a terminal and run `menulibre`\n  - You may see warning messages logged but this is fine, wait till the tool opens\n- when the tools GUI opens you should see the custom menu represented on the left\n  - You may need to expand the `Options` item\n\n{% fancybox /images/vitadockaux/menulibre.png \"Menu Libre Tool\" %}\n\n- With the `Options` menu highlighted click the `+` button in the top left.\n- Now add the `Enable Aux` menu item. Set the settings as seen in the image below. Click the icon on the left to select the `auxAudio.png` image coppied earlier.\n  - Be sure to tick the `Run In Terminal` tick box.\n  - Note the command begins with `./`\n  - Once set click the `save` button in the top left.\n\n{% fancybox /images/vitadockaux/enableAux.png \"Aux Menu item settings\" %}\n\n- Now add the `Configure Aux` menu item following the same approach as above.\n  - Note the command begins with `./`\n\n{% fancybox /images/vitadockaux/configureAux.png \"Configure Aux Menu item settings\" %}\n\n- You can now close `Menu Libre`.\n- Insert the USB Audio capture device.\n- Now reboot the pi\n- Launch the menu item `Enable Aux Audio`\n  - This will launch the `Aux Audio Configuration tool` for you.\n- There are a few information screens to read through, press `enter` to continue.\n- Now select the USB Audio capture device, there will most likely only be one option to choose from.\n  - The name you see will be different to mine\n\n{% fancybox /images/vitadockaux/inputSelect.png \"Select USB Audio Capture Device\" %}\n\n- Next select the audio output device, this is most likely the HDMI output which will be auto selected.\n\n{% fancybox /images/vitadockaux/outputSelect.png \"Select the output audio device\" %}\n\n- Now the Aux audio is fully configured, however you can re-run the configuration tool by selecting its menu item you added earlier.\n- Connect the Vita to the RPi, don't forget to use a ground loop isolater to remove the hum.\n- You should now be able to see and hear your vita through the TV!\n","source":"_posts/VitaDock-Manually-Apply-Aux-Audio-Feature.md","raw":"---\ntitle: VitaDock+ Manually Apply Aux Audio Feature\ntags:\n  - PSVita\n  - VitaDock+\nimage: /images/vitadockaux/thumb.png\n---\n\nThis little write up documents how to manually apply my feature change to the VitaDock+ project to enable the use of Aux Audio.\n\n<!-- more -->\n\n{% alert warning %}\n**This is not an official process**\n\nIf something does not work please contact me rather than logging an issue on the VitaDock+ repostory. I doubt anyone will see my ramblings but i don't want to cause any extra work for those maintaining the official project!\n\n{% endalert %}\n\n**TLDR;** _Get to the [point](#Lets-do-it)._\n\nThe VitaDock+ is a fantastic project, you can see it [here](https://github.com/SilentNightx/VitaDockPlus).\n\nIt allows you, in combination with some PSVita plugins, to stream audio and video from your PSVita to your telly using a RPi. Essentially it gives you an experience very close to the Nintendo Switch.\n\nWhen combined with a nice pretty little 3D printed dock its a really impressive setup.\n\n{% fancybox https://cdn.thingiverse.com/assets/66/14/a0/e8/7a/featured_preview_David.O_Dock.jpg  \" \" %}\n\n<p style=\"text-align: center\">Image credit to the 3D model creator <a href=\"https://www.thingiverse.com/thing:3942821\">here</a></p>\n\nBy default You are expected to use Bluetooth Audio and pair the PSVita with the RPi. I allong with others on the `VitaDock(+)` Discord server have had issues getting the two to pair. It seems to be very particular about the dongles it will use.\n\nOnce you have managed to pair them you have to manually connect and disconnect the RPi from within the PSVitas settings. This is a rather tedious process IMHO.\n\nI decided to write a feature allowing someone to choose between Bluetooth audio or Aux audio. This feature is currently in a Pull Request (you can view that [here](https://github.com/SilentNightx/VitaDockPlus/pull/32)) however untill that gets merged you can manually apply those changes instead.\n\nRead below to figure out how.\n\n## Lets do it\n\n{% alert info %}\n\nBefore doing this work _don't_ connect the PSVita to the RPi.\n\n{% endalert %}\n\n- Deploy the Experimental VitaDock+ V2 image [here](https://github.com/SilentNightx/VitaDockPlus/releases/)\n  - The Raspberry Pi Imager [here](https://www.raspberrypi.com/software/) can be used.\n- Once deployed insert the SD into your RPi and boot it for the first time. Let it do its first time setup.\n- Now you need to copy the required files onto your RPi, how you do that is upto you (SSH, thumb drive, floppy disk...) however ensure you copy the following files to the RPi\n  - Download the files needed from my fork [here](https://github.com/ste2425/VitaDockPlus/tree/addAuxInput)\n  - Click the green `code` button and select `Download Zip`\n  - Copy the following files over to the pi:\n    | Location in Zip | Location on RPi |\n    | -- | -- |\n    | All the files ending in `.sh` located in `/home/pi` | `/home/pi` |\n    | `vitadock.conf` located in `/home/pi` | `/home/pi` |\n    | `auxAudio.png` located in `/home/pi/Pictures/Icons` | `/home/pi/Pictures/Icons` |\n    | `aucAudioConfigure.png` located in `/home/pi/Pictures/Icons` | `/home/pi/Pictures/Icons` |\n- Once copied you need to take ownership of the `.sh` files and mark them as executable\n  - from a terminal run `cd ~ && sudo chown pi *.sh && chmod +rwx *.sh`\n- Now you need to add the menu items, this is done with the `menulibre` tool\n  - open a terminal and run `menulibre`\n  - You may see warning messages logged but this is fine, wait till the tool opens\n- when the tools GUI opens you should see the custom menu represented on the left\n  - You may need to expand the `Options` item\n\n{% fancybox /images/vitadockaux/menulibre.png \"Menu Libre Tool\" %}\n\n- With the `Options` menu highlighted click the `+` button in the top left.\n- Now add the `Enable Aux` menu item. Set the settings as seen in the image below. Click the icon on the left to select the `auxAudio.png` image coppied earlier.\n  - Be sure to tick the `Run In Terminal` tick box.\n  - Note the command begins with `./`\n  - Once set click the `save` button in the top left.\n\n{% fancybox /images/vitadockaux/enableAux.png \"Aux Menu item settings\" %}\n\n- Now add the `Configure Aux` menu item following the same approach as above.\n  - Note the command begins with `./`\n\n{% fancybox /images/vitadockaux/configureAux.png \"Configure Aux Menu item settings\" %}\n\n- You can now close `Menu Libre`.\n- Insert the USB Audio capture device.\n- Now reboot the pi\n- Launch the menu item `Enable Aux Audio`\n  - This will launch the `Aux Audio Configuration tool` for you.\n- There are a few information screens to read through, press `enter` to continue.\n- Now select the USB Audio capture device, there will most likely only be one option to choose from.\n  - The name you see will be different to mine\n\n{% fancybox /images/vitadockaux/inputSelect.png \"Select USB Audio Capture Device\" %}\n\n- Next select the audio output device, this is most likely the HDMI output which will be auto selected.\n\n{% fancybox /images/vitadockaux/outputSelect.png \"Select the output audio device\" %}\n\n- Now the Aux audio is fully configured, however you can re-run the configuration tool by selecting its menu item you added earlier.\n- Connect the Vita to the RPi, don't forget to use a ground loop isolater to remove the hum.\n- You should now be able to see and hear your vita through the TV!\n","slug":"VitaDock-Manually-Apply-Aux-Audio-Feature","published":1,"date":"2023-05-12T14:12:07.858Z","updated":"2023-05-12T20:48:07.841Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliea35bs000emkuebghoh77l","content":"<p>This little write up documents how to manually apply my feature change to the VitaDock+ project to enable the use of Aux Audio.</p>\n<span id=\"more\"></span>\n\n<div class=\"alert alert-warning\">\n      <p><strong>This is not an official process</strong></p>\n<p>If something does not work please contact me rather than logging an issue on the VitaDock+ repostory. I doubt anyone will see my ramblings but i don’t want to cause any extra work for those maintaining the official project!</p>\n\n      </div>\n\n<p><strong>TLDR;</strong> <em>Get to the <a href=\"#Lets-do-it\">point</a>.</em></p>\n<p>The VitaDock+ is a fantastic project, you can see it <a href=\"https://github.com/SilentNightx/VitaDockPlus\">here</a>.</p>\n<p>It allows you, in combination with some PSVita plugins, to stream audio and video from your PSVita to your telly using a RPi. Essentially it gives you an experience very close to the Nintendo Switch.</p>\n<p>When combined with a nice pretty little 3D printed dock its a really impressive setup.</p>\n\n  <a class=\"fancybox\" \n    href=\"https://cdn.thingiverse.com/assets/66/14/a0/e8/7a/featured_preview_David.O_Dock.jpg\"\n    title=\"\"\n  >\n    <img\n      src=\"https://cdn.thingiverse.com/assets/66/14/a0/e8/7a/featured_preview_David.O_Dock.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"\" />\n  </a>\n\n  <span class=\"caption hide\">\n    \n  </span>\n\n\n<p style=\"text-align: center\">Image credit to the 3D model creator <a href=\"https://www.thingiverse.com/thing:3942821\">here</a></p>\n\n<p>By default You are expected to use Bluetooth Audio and pair the PSVita with the RPi. I allong with others on the <code>VitaDock(+)</code> Discord server have had issues getting the two to pair. It seems to be very particular about the dongles it will use.</p>\n<p>Once you have managed to pair them you have to manually connect and disconnect the RPi from within the PSVitas settings. This is a rather tedious process IMHO.</p>\n<p>I decided to write a feature allowing someone to choose between Bluetooth audio or Aux audio. This feature is currently in a Pull Request (you can view that <a href=\"https://github.com/SilentNightx/VitaDockPlus/pull/32\">here</a>) however untill that gets merged you can manually apply those changes instead.</p>\n<p>Read below to figure out how.</p>\n<h2 id=\"Lets-do-it\"><a href=\"#Lets-do-it\" class=\"headerlink\" title=\"Lets do it\"></a>Lets do it</h2><div class=\"alert alert-info\">\n      <p>Before doing this work <em>don’t</em> connect the PSVita to the RPi.</p>\n\n      </div>\n\n<ul>\n<li>Deploy the Experimental VitaDock+ V2 image <a href=\"https://github.com/SilentNightx/VitaDockPlus/releases/\">here</a><ul>\n<li>The Raspberry Pi Imager <a href=\"https://www.raspberrypi.com/software/\">here</a> can be used.</li>\n</ul>\n</li>\n<li>Once deployed insert the SD into your RPi and boot it for the first time. Let it do its first time setup.</li>\n<li>Now you need to copy the required files onto your RPi, how you do that is upto you (SSH, thumb drive, floppy disk…) however ensure you copy the following files to the RPi<ul>\n<li>Download the files needed from my fork <a href=\"https://github.com/ste2425/VitaDockPlus/tree/addAuxInput\">here</a></li>\n<li>Click the green <code>code</code> button and select <code>Download Zip</code></li>\n<li>Copy the following files over to the pi:<table>\n<thead>\n<tr>\n<th>Location in Zip</th>\n<th>Location on RPi</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>All the files ending in <code>.sh</code> located in <code>/home/pi</code></td>\n<td><code>/home/pi</code></td>\n</tr>\n<tr>\n<td><code>vitadock.conf</code> located in <code>/home/pi</code></td>\n<td><code>/home/pi</code></td>\n</tr>\n<tr>\n<td><code>auxAudio.png</code> located in <code>/home/pi/Pictures/Icons</code></td>\n<td><code>/home/pi/Pictures/Icons</code></td>\n</tr>\n<tr>\n<td><code>aucAudioConfigure.png</code> located in <code>/home/pi/Pictures/Icons</code></td>\n<td><code>/home/pi/Pictures/Icons</code></td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li>Once copied you need to take ownership of the <code>.sh</code> files and mark them as executable<ul>\n<li>from a terminal run <code>cd ~ &amp;&amp; sudo chown pi *.sh &amp;&amp; chmod +rwx *.sh</code></li>\n</ul>\n</li>\n<li>Now you need to add the menu items, this is done with the <code>menulibre</code> tool<ul>\n<li>open a terminal and run <code>menulibre</code></li>\n<li>You may see warning messages logged but this is fine, wait till the tool opens</li>\n</ul>\n</li>\n<li>when the tools GUI opens you should see the custom menu represented on the left<ul>\n<li>You may need to expand the <code>Options</code> item</li>\n</ul>\n</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/menulibre.png\"\n    title=\"Menu Libre Tool\"\n  >\n    <img\n      src=\"/images/vitadockaux/menulibre.png\"\n      style=\"max-width: 300px\"\n      alt=\"Menu Libre Tool\" />\n  </a>\n\n  <span class=\"caption \">\n    Menu Libre Tool\n  </span>\n\n\n<ul>\n<li>With the <code>Options</code> menu highlighted click the <code>+</code> button in the top left.</li>\n<li>Now add the <code>Enable Aux</code> menu item. Set the settings as seen in the image below. Click the icon on the left to select the <code>auxAudio.png</code> image coppied earlier.<ul>\n<li>Be sure to tick the <code>Run In Terminal</code> tick box.</li>\n<li>Note the command begins with <code>./</code></li>\n<li>Once set click the <code>save</code> button in the top left.</li>\n</ul>\n</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/enableAux.png\"\n    title=\"Aux Menu item settings\"\n  >\n    <img\n      src=\"/images/vitadockaux/enableAux.png\"\n      style=\"max-width: 300px\"\n      alt=\"Aux Menu item settings\" />\n  </a>\n\n  <span class=\"caption \">\n    Aux Menu item settings\n  </span>\n\n\n<ul>\n<li>Now add the <code>Configure Aux</code> menu item following the same approach as above.<ul>\n<li>Note the command begins with <code>./</code></li>\n</ul>\n</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/configureAux.png\"\n    title=\"Configure Aux Menu item settings\"\n  >\n    <img\n      src=\"/images/vitadockaux/configureAux.png\"\n      style=\"max-width: 300px\"\n      alt=\"Configure Aux Menu item settings\" />\n  </a>\n\n  <span class=\"caption \">\n    Configure Aux Menu item settings\n  </span>\n\n\n<ul>\n<li>You can now close <code>Menu Libre</code>.</li>\n<li>Insert the USB Audio capture device.</li>\n<li>Now reboot the pi</li>\n<li>Launch the menu item <code>Enable Aux Audio</code><ul>\n<li>This will launch the <code>Aux Audio Configuration tool</code> for you.</li>\n</ul>\n</li>\n<li>There are a few information screens to read through, press <code>enter</code> to continue.</li>\n<li>Now select the USB Audio capture device, there will most likely only be one option to choose from.<ul>\n<li>The name you see will be different to mine</li>\n</ul>\n</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/inputSelect.png\"\n    title=\"Select USB Audio Capture Device\"\n  >\n    <img\n      src=\"/images/vitadockaux/inputSelect.png\"\n      style=\"max-width: 300px\"\n      alt=\"Select USB Audio Capture Device\" />\n  </a>\n\n  <span class=\"caption \">\n    Select USB Audio Capture Device\n  </span>\n\n\n<ul>\n<li>Next select the audio output device, this is most likely the HDMI output which will be auto selected.</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/outputSelect.png\"\n    title=\"Select the output audio device\"\n  >\n    <img\n      src=\"/images/vitadockaux/outputSelect.png\"\n      style=\"max-width: 300px\"\n      alt=\"Select the output audio device\" />\n  </a>\n\n  <span class=\"caption \">\n    Select the output audio device\n  </span>\n\n\n<ul>\n<li>Now the Aux audio is fully configured, however you can re-run the configuration tool by selecting its menu item you added earlier.</li>\n<li>Connect the Vita to the RPi, don’t forget to use a ground loop isolater to remove the hum.</li>\n<li>You should now be able to see and hear your vita through the TV!</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>This little write up documents how to manually apply my feature change to the VitaDock+ project to enable the use of Aux Audio.</p>","more":"<div class=\"alert alert-warning\">\n      <p><strong>This is not an official process</strong></p>\n<p>If something does not work please contact me rather than logging an issue on the VitaDock+ repostory. I doubt anyone will see my ramblings but i don’t want to cause any extra work for those maintaining the official project!</p>\n\n      </div>\n\n<p><strong>TLDR;</strong> <em>Get to the <a href=\"#Lets-do-it\">point</a>.</em></p>\n<p>The VitaDock+ is a fantastic project, you can see it <a href=\"https://github.com/SilentNightx/VitaDockPlus\">here</a>.</p>\n<p>It allows you, in combination with some PSVita plugins, to stream audio and video from your PSVita to your telly using a RPi. Essentially it gives you an experience very close to the Nintendo Switch.</p>\n<p>When combined with a nice pretty little 3D printed dock its a really impressive setup.</p>\n\n  <a class=\"fancybox\" \n    href=\"https://cdn.thingiverse.com/assets/66/14/a0/e8/7a/featured_preview_David.O_Dock.jpg\"\n    title=\"\"\n  >\n    <img\n      src=\"https://cdn.thingiverse.com/assets/66/14/a0/e8/7a/featured_preview_David.O_Dock.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"\" />\n  </a>\n\n  <span class=\"caption hide\">\n    \n  </span>\n\n\n<p style=\"text-align: center\">Image credit to the 3D model creator <a href=\"https://www.thingiverse.com/thing:3942821\">here</a></p>\n\n<p>By default You are expected to use Bluetooth Audio and pair the PSVita with the RPi. I allong with others on the <code>VitaDock(+)</code> Discord server have had issues getting the two to pair. It seems to be very particular about the dongles it will use.</p>\n<p>Once you have managed to pair them you have to manually connect and disconnect the RPi from within the PSVitas settings. This is a rather tedious process IMHO.</p>\n<p>I decided to write a feature allowing someone to choose between Bluetooth audio or Aux audio. This feature is currently in a Pull Request (you can view that <a href=\"https://github.com/SilentNightx/VitaDockPlus/pull/32\">here</a>) however untill that gets merged you can manually apply those changes instead.</p>\n<p>Read below to figure out how.</p>\n<h2 id=\"Lets-do-it\"><a href=\"#Lets-do-it\" class=\"headerlink\" title=\"Lets do it\"></a>Lets do it</h2><div class=\"alert alert-info\">\n      <p>Before doing this work <em>don’t</em> connect the PSVita to the RPi.</p>\n\n      </div>\n\n<ul>\n<li>Deploy the Experimental VitaDock+ V2 image <a href=\"https://github.com/SilentNightx/VitaDockPlus/releases/\">here</a><ul>\n<li>The Raspberry Pi Imager <a href=\"https://www.raspberrypi.com/software/\">here</a> can be used.</li>\n</ul>\n</li>\n<li>Once deployed insert the SD into your RPi and boot it for the first time. Let it do its first time setup.</li>\n<li>Now you need to copy the required files onto your RPi, how you do that is upto you (SSH, thumb drive, floppy disk…) however ensure you copy the following files to the RPi<ul>\n<li>Download the files needed from my fork <a href=\"https://github.com/ste2425/VitaDockPlus/tree/addAuxInput\">here</a></li>\n<li>Click the green <code>code</code> button and select <code>Download Zip</code></li>\n<li>Copy the following files over to the pi:<table>\n<thead>\n<tr>\n<th>Location in Zip</th>\n<th>Location on RPi</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>All the files ending in <code>.sh</code> located in <code>/home/pi</code></td>\n<td><code>/home/pi</code></td>\n</tr>\n<tr>\n<td><code>vitadock.conf</code> located in <code>/home/pi</code></td>\n<td><code>/home/pi</code></td>\n</tr>\n<tr>\n<td><code>auxAudio.png</code> located in <code>/home/pi/Pictures/Icons</code></td>\n<td><code>/home/pi/Pictures/Icons</code></td>\n</tr>\n<tr>\n<td><code>aucAudioConfigure.png</code> located in <code>/home/pi/Pictures/Icons</code></td>\n<td><code>/home/pi/Pictures/Icons</code></td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li>Once copied you need to take ownership of the <code>.sh</code> files and mark them as executable<ul>\n<li>from a terminal run <code>cd ~ &amp;&amp; sudo chown pi *.sh &amp;&amp; chmod +rwx *.sh</code></li>\n</ul>\n</li>\n<li>Now you need to add the menu items, this is done with the <code>menulibre</code> tool<ul>\n<li>open a terminal and run <code>menulibre</code></li>\n<li>You may see warning messages logged but this is fine, wait till the tool opens</li>\n</ul>\n</li>\n<li>when the tools GUI opens you should see the custom menu represented on the left<ul>\n<li>You may need to expand the <code>Options</code> item</li>\n</ul>\n</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/menulibre.png\"\n    title=\"Menu Libre Tool\"\n  >\n    <img\n      src=\"/images/vitadockaux/menulibre.png\"\n      style=\"max-width: 300px\"\n      alt=\"Menu Libre Tool\" />\n  </a>\n\n  <span class=\"caption \">\n    Menu Libre Tool\n  </span>\n\n\n<ul>\n<li>With the <code>Options</code> menu highlighted click the <code>+</code> button in the top left.</li>\n<li>Now add the <code>Enable Aux</code> menu item. Set the settings as seen in the image below. Click the icon on the left to select the <code>auxAudio.png</code> image coppied earlier.<ul>\n<li>Be sure to tick the <code>Run In Terminal</code> tick box.</li>\n<li>Note the command begins with <code>./</code></li>\n<li>Once set click the <code>save</code> button in the top left.</li>\n</ul>\n</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/enableAux.png\"\n    title=\"Aux Menu item settings\"\n  >\n    <img\n      src=\"/images/vitadockaux/enableAux.png\"\n      style=\"max-width: 300px\"\n      alt=\"Aux Menu item settings\" />\n  </a>\n\n  <span class=\"caption \">\n    Aux Menu item settings\n  </span>\n\n\n<ul>\n<li>Now add the <code>Configure Aux</code> menu item following the same approach as above.<ul>\n<li>Note the command begins with <code>./</code></li>\n</ul>\n</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/configureAux.png\"\n    title=\"Configure Aux Menu item settings\"\n  >\n    <img\n      src=\"/images/vitadockaux/configureAux.png\"\n      style=\"max-width: 300px\"\n      alt=\"Configure Aux Menu item settings\" />\n  </a>\n\n  <span class=\"caption \">\n    Configure Aux Menu item settings\n  </span>\n\n\n<ul>\n<li>You can now close <code>Menu Libre</code>.</li>\n<li>Insert the USB Audio capture device.</li>\n<li>Now reboot the pi</li>\n<li>Launch the menu item <code>Enable Aux Audio</code><ul>\n<li>This will launch the <code>Aux Audio Configuration tool</code> for you.</li>\n</ul>\n</li>\n<li>There are a few information screens to read through, press <code>enter</code> to continue.</li>\n<li>Now select the USB Audio capture device, there will most likely only be one option to choose from.<ul>\n<li>The name you see will be different to mine</li>\n</ul>\n</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/inputSelect.png\"\n    title=\"Select USB Audio Capture Device\"\n  >\n    <img\n      src=\"/images/vitadockaux/inputSelect.png\"\n      style=\"max-width: 300px\"\n      alt=\"Select USB Audio Capture Device\" />\n  </a>\n\n  <span class=\"caption \">\n    Select USB Audio Capture Device\n  </span>\n\n\n<ul>\n<li>Next select the audio output device, this is most likely the HDMI output which will be auto selected.</li>\n</ul>\n\n  <a class=\"fancybox\" \n    href=\"/images/vitadockaux/outputSelect.png\"\n    title=\"Select the output audio device\"\n  >\n    <img\n      src=\"/images/vitadockaux/outputSelect.png\"\n      style=\"max-width: 300px\"\n      alt=\"Select the output audio device\" />\n  </a>\n\n  <span class=\"caption \">\n    Select the output audio device\n  </span>\n\n\n<ul>\n<li>Now the Aux audio is fully configured, however you can re-run the configuration tool by selecting its menu item you added earlier.</li>\n<li>Connect the Vita to the RPi, don’t forget to use a ground loop isolater to remove the hum.</li>\n<li>You should now be able to see and hear your vita through the TV!</li>\n</ul>"},{"title":"PSP Internal Consolizer - Making Connections","image":"/images/consolizer - making connections/analog.png","_content":"\nToday I begin working on my internal PSP Consolizer.\n\nProbably around a year ago I started work on an [external consolizer](https://github.com/ste2425/PSP-Consolizer). The end goal was always for it to be internal to the PSP but there was so much I needed to learn first. Arduino dev, PCB design & production etc. Figured it would be best to start easy and not have to worry about trying to cram it all into the PSP too.\n\n<!-- more -->\n\nThe first challenge I needed to try and solve was how to connect both the original PSP's buttons and the Arduino to the PSP's motherboard.\n\nThe PSP (2000 in my case) uses two 10-pin and one 14-pin 0.5mm FFC connectors for its face buttons.\n\nThe analog stick uses an odd surface mating situation. Similar to PS2/3 controllers it relies on metal contacts on the analog stick to touch contacts on the motherboard. I'll need to figure out a way to work with that.\n\n# FFC Connectors\n\nThis one seems simpler. Essentially a Y-splitter. I'm thinking, build some custom FPC's. A male connector built into the FPC on one end and two FFC connectors on the other.\n\nPlug the male end into the motherboard, the PSP's buttons into one FFC connector and the Arduino into the other.\n\nI can even simplify it and omit any grounds going to the Arduino.\n\n{% fancybox \"/images/consolizer - making connections/left-connector.png\" \"/images/consolizer - making connections/left-connector-thumb.png\" \"Left Connector\" %}\n\n{% fancybox \"/images/consolizer - making connections/middle-connector.png\" \"/images/consolizer - making connections/middle-connector-thumb.png\" \"Center Connector\" %}\n\nI haven't test-fitted these yet.\n\nThe plan was to print them on paper, offer it up to the motherboard and see how it fits. However, when I got my printer out it leaked ink all over my floor.\n\nLuckily I'm visiting my parents for Christmas so I'm sure they won't mind me borrowing their printer.\n\n# Analog Stick\n\nThe analog stick for the PSP is odd. It doesn't mound with a FFC connector (on the 2000 anyway, the 3000 does). It instead has four gold contacts on the motherboard which press against contacts on the stick.\n\nSo I need a way of intercepting these.\n\nAgain a custom FPC is on the cards, this time a dual-layer one.\n\nIdea is it has contacts on both sides that will mate with the motherboard and stick. Ground and power can be directly connected but sense for the X and Y axis needs to be intercepted.\n\nThis is because we either need to feed to the PSP a value from our digital potentiometer when using a controller or hook it directly to the original stick when not. If we connect both at the same time it will skew the resistance and result in a stick only operating at half its range.\n\nOn the Arduino's side I intend to use an Analog Multiplexer, which essentially acts like a switch for analog signals and will allow me to route either the digital potentiometer or the original stick to the PSP.\n\n{% fancybox \"/images/consolizer - making connections/analog.png\" \"/images/consolizer - making connections/analog-thumb.png\" \"Analog Stick FPC\" %}\n\n# Why not do it in Software?\n\nThe PSP has two interfaces an Arduino could use to talk to it in software, USB and a Serial Port exposed via the AV socket.\n\nThere are also a number of projects attempting to do the same (external controllers) using these ports.\n\n## Operation-Ditto\n\nhttps://github.com/Operation-DITTO/Operation-DITTO\n\nIs a project to add a second analog stick to the PSP. It uses a little microcontroller to read the stick then talk to the PSP via the serial port and gives a custom PRX (plugin that runs on the PSP) the position of the stick.\n\nTrouble is the project has stalled as there is difficulty in getting the protocol right the PSP expects its data in.\n\nMore info can be found on the PSP Homebrew Discord.\n\n## Remote Joy Lite\n\nRemote Joy is an old-school program built back in the PSP's homebrew hayday. It sent data (controls and video) over USB to an app that ran on a PC. This app displayed the video from the PSP and fed controls back into the PSP.\n\nIt allowed you to essentially play games on the PSP whilst viewing them on the PC and using a controller.\n\nThis [Blog Post](https://habr.com/ru/post/213513/) (written in Russian) took the sources from that project, stripped out everything except just the remote control (no video) and re-wrote the PC app as a script to run on a Raspberry Pi.\n\nI attempted to port the Pi script to run on the Arduino using the built in USBHost library but with little success. I could get the Arduino to connect to the PSP, importantly the custom PRX acknowledged the connection. However, no matter what I did I could not get the Arduino to send data to the PSP after the fact.\n\n# To Finish up\n\nIn the end, I would like the Arduino and the PSP to talk at a software level.\n\nThere are so many options unlocked if that could happen. PSP app to make button mappings in real time, mappings per game etc.\n\nHowever I would also like to get a version of this out and working so I'll stick with my current plan for now.\n\nJust need to get my hands on a printer and test-fit these adapters then get them ordered.\n","source":"_posts/PSP-Internal-Consolizer-Making-Connections.md","raw":"---\ntitle: PSP Internal Consolizer - Making Connections\ntags:\n  - psp\n  - psp-consolizer\nimage: /images/consolizer - making connections/analog.png\n---\n\nToday I begin working on my internal PSP Consolizer.\n\nProbably around a year ago I started work on an [external consolizer](https://github.com/ste2425/PSP-Consolizer). The end goal was always for it to be internal to the PSP but there was so much I needed to learn first. Arduino dev, PCB design & production etc. Figured it would be best to start easy and not have to worry about trying to cram it all into the PSP too.\n\n<!-- more -->\n\nThe first challenge I needed to try and solve was how to connect both the original PSP's buttons and the Arduino to the PSP's motherboard.\n\nThe PSP (2000 in my case) uses two 10-pin and one 14-pin 0.5mm FFC connectors for its face buttons.\n\nThe analog stick uses an odd surface mating situation. Similar to PS2/3 controllers it relies on metal contacts on the analog stick to touch contacts on the motherboard. I'll need to figure out a way to work with that.\n\n# FFC Connectors\n\nThis one seems simpler. Essentially a Y-splitter. I'm thinking, build some custom FPC's. A male connector built into the FPC on one end and two FFC connectors on the other.\n\nPlug the male end into the motherboard, the PSP's buttons into one FFC connector and the Arduino into the other.\n\nI can even simplify it and omit any grounds going to the Arduino.\n\n{% fancybox \"/images/consolizer - making connections/left-connector.png\" \"/images/consolizer - making connections/left-connector-thumb.png\" \"Left Connector\" %}\n\n{% fancybox \"/images/consolizer - making connections/middle-connector.png\" \"/images/consolizer - making connections/middle-connector-thumb.png\" \"Center Connector\" %}\n\nI haven't test-fitted these yet.\n\nThe plan was to print them on paper, offer it up to the motherboard and see how it fits. However, when I got my printer out it leaked ink all over my floor.\n\nLuckily I'm visiting my parents for Christmas so I'm sure they won't mind me borrowing their printer.\n\n# Analog Stick\n\nThe analog stick for the PSP is odd. It doesn't mound with a FFC connector (on the 2000 anyway, the 3000 does). It instead has four gold contacts on the motherboard which press against contacts on the stick.\n\nSo I need a way of intercepting these.\n\nAgain a custom FPC is on the cards, this time a dual-layer one.\n\nIdea is it has contacts on both sides that will mate with the motherboard and stick. Ground and power can be directly connected but sense for the X and Y axis needs to be intercepted.\n\nThis is because we either need to feed to the PSP a value from our digital potentiometer when using a controller or hook it directly to the original stick when not. If we connect both at the same time it will skew the resistance and result in a stick only operating at half its range.\n\nOn the Arduino's side I intend to use an Analog Multiplexer, which essentially acts like a switch for analog signals and will allow me to route either the digital potentiometer or the original stick to the PSP.\n\n{% fancybox \"/images/consolizer - making connections/analog.png\" \"/images/consolizer - making connections/analog-thumb.png\" \"Analog Stick FPC\" %}\n\n# Why not do it in Software?\n\nThe PSP has two interfaces an Arduino could use to talk to it in software, USB and a Serial Port exposed via the AV socket.\n\nThere are also a number of projects attempting to do the same (external controllers) using these ports.\n\n## Operation-Ditto\n\nhttps://github.com/Operation-DITTO/Operation-DITTO\n\nIs a project to add a second analog stick to the PSP. It uses a little microcontroller to read the stick then talk to the PSP via the serial port and gives a custom PRX (plugin that runs on the PSP) the position of the stick.\n\nTrouble is the project has stalled as there is difficulty in getting the protocol right the PSP expects its data in.\n\nMore info can be found on the PSP Homebrew Discord.\n\n## Remote Joy Lite\n\nRemote Joy is an old-school program built back in the PSP's homebrew hayday. It sent data (controls and video) over USB to an app that ran on a PC. This app displayed the video from the PSP and fed controls back into the PSP.\n\nIt allowed you to essentially play games on the PSP whilst viewing them on the PC and using a controller.\n\nThis [Blog Post](https://habr.com/ru/post/213513/) (written in Russian) took the sources from that project, stripped out everything except just the remote control (no video) and re-wrote the PC app as a script to run on a Raspberry Pi.\n\nI attempted to port the Pi script to run on the Arduino using the built in USBHost library but with little success. I could get the Arduino to connect to the PSP, importantly the custom PRX acknowledged the connection. However, no matter what I did I could not get the Arduino to send data to the PSP after the fact.\n\n# To Finish up\n\nIn the end, I would like the Arduino and the PSP to talk at a software level.\n\nThere are so many options unlocked if that could happen. PSP app to make button mappings in real time, mappings per game etc.\n\nHowever I would also like to get a version of this out and working so I'll stick with my current plan for now.\n\nJust need to get my hands on a printer and test-fit these adapters then get them ordered.\n","slug":"PSP-Internal-Consolizer-Making-Connections","published":1,"date":"2022-12-21T20:33:04.183Z","updated":"2022-12-22T20:27:37.531Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliea35bs000fmkue9uhzhz8r","content":"<p>Today I begin working on my internal PSP Consolizer.</p>\n<p>Probably around a year ago I started work on an <a href=\"https://github.com/ste2425/PSP-Consolizer\">external consolizer</a>. The end goal was always for it to be internal to the PSP but there was so much I needed to learn first. Arduino dev, PCB design &amp; production etc. Figured it would be best to start easy and not have to worry about trying to cram it all into the PSP too.</p>\n<span id=\"more\"></span>\n\n<p>The first challenge I needed to try and solve was how to connect both the original PSP’s buttons and the Arduino to the PSP’s motherboard.</p>\n<p>The PSP (2000 in my case) uses two 10-pin and one 14-pin 0.5mm FFC connectors for its face buttons.</p>\n<p>The analog stick uses an odd surface mating situation. Similar to PS2/3 controllers it relies on metal contacts on the analog stick to touch contacts on the motherboard. I’ll need to figure out a way to work with that.</p>\n<h1 id=\"FFC-Connectors\"><a href=\"#FFC-Connectors\" class=\"headerlink\" title=\"FFC Connectors\"></a>FFC Connectors</h1><p>This one seems simpler. Essentially a Y-splitter. I’m thinking, build some custom FPC’s. A male connector built into the FPC on one end and two FFC connectors on the other.</p>\n<p>Plug the male end into the motherboard, the PSP’s buttons into one FFC connector and the Arduino into the other.</p>\n<p>I can even simplify it and omit any grounds going to the Arduino.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer - making connections/left-connector.png\"\n    title=\"Left Connector\"\n  >\n    <img\n      src=\"/images/consolizer - making connections/left-connector-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"Left Connector\" />\n  </a>\n\n  <span class=\"caption \">\n    Left Connector\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer - making connections/middle-connector.png\"\n    title=\"Center Connector\"\n  >\n    <img\n      src=\"/images/consolizer - making connections/middle-connector-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"Center Connector\" />\n  </a>\n\n  <span class=\"caption \">\n    Center Connector\n  </span>\n\n\n<p>I haven’t test-fitted these yet.</p>\n<p>The plan was to print them on paper, offer it up to the motherboard and see how it fits. However, when I got my printer out it leaked ink all over my floor.</p>\n<p>Luckily I’m visiting my parents for Christmas so I’m sure they won’t mind me borrowing their printer.</p>\n<h1 id=\"Analog-Stick\"><a href=\"#Analog-Stick\" class=\"headerlink\" title=\"Analog Stick\"></a>Analog Stick</h1><p>The analog stick for the PSP is odd. It doesn’t mound with a FFC connector (on the 2000 anyway, the 3000 does). It instead has four gold contacts on the motherboard which press against contacts on the stick.</p>\n<p>So I need a way of intercepting these.</p>\n<p>Again a custom FPC is on the cards, this time a dual-layer one.</p>\n<p>Idea is it has contacts on both sides that will mate with the motherboard and stick. Ground and power can be directly connected but sense for the X and Y axis needs to be intercepted.</p>\n<p>This is because we either need to feed to the PSP a value from our digital potentiometer when using a controller or hook it directly to the original stick when not. If we connect both at the same time it will skew the resistance and result in a stick only operating at half its range.</p>\n<p>On the Arduino’s side I intend to use an Analog Multiplexer, which essentially acts like a switch for analog signals and will allow me to route either the digital potentiometer or the original stick to the PSP.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer - making connections/analog.png\"\n    title=\"Analog Stick FPC\"\n  >\n    <img\n      src=\"/images/consolizer - making connections/analog-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"Analog Stick FPC\" />\n  </a>\n\n  <span class=\"caption \">\n    Analog Stick FPC\n  </span>\n\n\n<h1 id=\"Why-not-do-it-in-Software\"><a href=\"#Why-not-do-it-in-Software\" class=\"headerlink\" title=\"Why not do it in Software?\"></a>Why not do it in Software?</h1><p>The PSP has two interfaces an Arduino could use to talk to it in software, USB and a Serial Port exposed via the AV socket.</p>\n<p>There are also a number of projects attempting to do the same (external controllers) using these ports.</p>\n<h2 id=\"Operation-Ditto\"><a href=\"#Operation-Ditto\" class=\"headerlink\" title=\"Operation-Ditto\"></a>Operation-Ditto</h2><p><a href=\"https://github.com/Operation-DITTO/Operation-DITTO\">https://github.com/Operation-DITTO/Operation-DITTO</a></p>\n<p>Is a project to add a second analog stick to the PSP. It uses a little microcontroller to read the stick then talk to the PSP via the serial port and gives a custom PRX (plugin that runs on the PSP) the position of the stick.</p>\n<p>Trouble is the project has stalled as there is difficulty in getting the protocol right the PSP expects its data in.</p>\n<p>More info can be found on the PSP Homebrew Discord.</p>\n<h2 id=\"Remote-Joy-Lite\"><a href=\"#Remote-Joy-Lite\" class=\"headerlink\" title=\"Remote Joy Lite\"></a>Remote Joy Lite</h2><p>Remote Joy is an old-school program built back in the PSP’s homebrew hayday. It sent data (controls and video) over USB to an app that ran on a PC. This app displayed the video from the PSP and fed controls back into the PSP.</p>\n<p>It allowed you to essentially play games on the PSP whilst viewing them on the PC and using a controller.</p>\n<p>This <a href=\"https://habr.com/ru/post/213513/\">Blog Post</a> (written in Russian) took the sources from that project, stripped out everything except just the remote control (no video) and re-wrote the PC app as a script to run on a Raspberry Pi.</p>\n<p>I attempted to port the Pi script to run on the Arduino using the built in USBHost library but with little success. I could get the Arduino to connect to the PSP, importantly the custom PRX acknowledged the connection. However, no matter what I did I could not get the Arduino to send data to the PSP after the fact.</p>\n<h1 id=\"To-Finish-up\"><a href=\"#To-Finish-up\" class=\"headerlink\" title=\"To Finish up\"></a>To Finish up</h1><p>In the end, I would like the Arduino and the PSP to talk at a software level.</p>\n<p>There are so many options unlocked if that could happen. PSP app to make button mappings in real time, mappings per game etc.</p>\n<p>However I would also like to get a version of this out and working so I’ll stick with my current plan for now.</p>\n<p>Just need to get my hands on a printer and test-fit these adapters then get them ordered.</p>\n","site":{"data":{}},"excerpt":"<p>Today I begin working on my internal PSP Consolizer.</p>\n<p>Probably around a year ago I started work on an <a href=\"https://github.com/ste2425/PSP-Consolizer\">external consolizer</a>. The end goal was always for it to be internal to the PSP but there was so much I needed to learn first. Arduino dev, PCB design &amp; production etc. Figured it would be best to start easy and not have to worry about trying to cram it all into the PSP too.</p>","more":"<p>The first challenge I needed to try and solve was how to connect both the original PSP’s buttons and the Arduino to the PSP’s motherboard.</p>\n<p>The PSP (2000 in my case) uses two 10-pin and one 14-pin 0.5mm FFC connectors for its face buttons.</p>\n<p>The analog stick uses an odd surface mating situation. Similar to PS2/3 controllers it relies on metal contacts on the analog stick to touch contacts on the motherboard. I’ll need to figure out a way to work with that.</p>\n<h1 id=\"FFC-Connectors\"><a href=\"#FFC-Connectors\" class=\"headerlink\" title=\"FFC Connectors\"></a>FFC Connectors</h1><p>This one seems simpler. Essentially a Y-splitter. I’m thinking, build some custom FPC’s. A male connector built into the FPC on one end and two FFC connectors on the other.</p>\n<p>Plug the male end into the motherboard, the PSP’s buttons into one FFC connector and the Arduino into the other.</p>\n<p>I can even simplify it and omit any grounds going to the Arduino.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer - making connections/left-connector.png\"\n    title=\"Left Connector\"\n  >\n    <img\n      src=\"/images/consolizer - making connections/left-connector-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"Left Connector\" />\n  </a>\n\n  <span class=\"caption \">\n    Left Connector\n  </span>\n\n\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer - making connections/middle-connector.png\"\n    title=\"Center Connector\"\n  >\n    <img\n      src=\"/images/consolizer - making connections/middle-connector-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"Center Connector\" />\n  </a>\n\n  <span class=\"caption \">\n    Center Connector\n  </span>\n\n\n<p>I haven’t test-fitted these yet.</p>\n<p>The plan was to print them on paper, offer it up to the motherboard and see how it fits. However, when I got my printer out it leaked ink all over my floor.</p>\n<p>Luckily I’m visiting my parents for Christmas so I’m sure they won’t mind me borrowing their printer.</p>\n<h1 id=\"Analog-Stick\"><a href=\"#Analog-Stick\" class=\"headerlink\" title=\"Analog Stick\"></a>Analog Stick</h1><p>The analog stick for the PSP is odd. It doesn’t mound with a FFC connector (on the 2000 anyway, the 3000 does). It instead has four gold contacts on the motherboard which press against contacts on the stick.</p>\n<p>So I need a way of intercepting these.</p>\n<p>Again a custom FPC is on the cards, this time a dual-layer one.</p>\n<p>Idea is it has contacts on both sides that will mate with the motherboard and stick. Ground and power can be directly connected but sense for the X and Y axis needs to be intercepted.</p>\n<p>This is because we either need to feed to the PSP a value from our digital potentiometer when using a controller or hook it directly to the original stick when not. If we connect both at the same time it will skew the resistance and result in a stick only operating at half its range.</p>\n<p>On the Arduino’s side I intend to use an Analog Multiplexer, which essentially acts like a switch for analog signals and will allow me to route either the digital potentiometer or the original stick to the PSP.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer - making connections/analog.png\"\n    title=\"Analog Stick FPC\"\n  >\n    <img\n      src=\"/images/consolizer - making connections/analog-thumb.png\"\n      style=\"max-width: 300px\"\n      alt=\"Analog Stick FPC\" />\n  </a>\n\n  <span class=\"caption \">\n    Analog Stick FPC\n  </span>\n\n\n<h1 id=\"Why-not-do-it-in-Software\"><a href=\"#Why-not-do-it-in-Software\" class=\"headerlink\" title=\"Why not do it in Software?\"></a>Why not do it in Software?</h1><p>The PSP has two interfaces an Arduino could use to talk to it in software, USB and a Serial Port exposed via the AV socket.</p>\n<p>There are also a number of projects attempting to do the same (external controllers) using these ports.</p>\n<h2 id=\"Operation-Ditto\"><a href=\"#Operation-Ditto\" class=\"headerlink\" title=\"Operation-Ditto\"></a>Operation-Ditto</h2><p><a href=\"https://github.com/Operation-DITTO/Operation-DITTO\">https://github.com/Operation-DITTO/Operation-DITTO</a></p>\n<p>Is a project to add a second analog stick to the PSP. It uses a little microcontroller to read the stick then talk to the PSP via the serial port and gives a custom PRX (plugin that runs on the PSP) the position of the stick.</p>\n<p>Trouble is the project has stalled as there is difficulty in getting the protocol right the PSP expects its data in.</p>\n<p>More info can be found on the PSP Homebrew Discord.</p>\n<h2 id=\"Remote-Joy-Lite\"><a href=\"#Remote-Joy-Lite\" class=\"headerlink\" title=\"Remote Joy Lite\"></a>Remote Joy Lite</h2><p>Remote Joy is an old-school program built back in the PSP’s homebrew hayday. It sent data (controls and video) over USB to an app that ran on a PC. This app displayed the video from the PSP and fed controls back into the PSP.</p>\n<p>It allowed you to essentially play games on the PSP whilst viewing them on the PC and using a controller.</p>\n<p>This <a href=\"https://habr.com/ru/post/213513/\">Blog Post</a> (written in Russian) took the sources from that project, stripped out everything except just the remote control (no video) and re-wrote the PC app as a script to run on a Raspberry Pi.</p>\n<p>I attempted to port the Pi script to run on the Arduino using the built in USBHost library but with little success. I could get the Arduino to connect to the PSP, importantly the custom PRX acknowledged the connection. However, no matter what I did I could not get the Arduino to send data to the PSP after the fact.</p>\n<h1 id=\"To-Finish-up\"><a href=\"#To-Finish-up\" class=\"headerlink\" title=\"To Finish up\"></a>To Finish up</h1><p>In the end, I would like the Arduino and the PSP to talk at a software level.</p>\n<p>There are so many options unlocked if that could happen. PSP app to make button mappings in real time, mappings per game etc.</p>\n<p>However I would also like to get a version of this out and working so I’ll stick with my current plan for now.</p>\n<p>Just need to get my hands on a printer and test-fit these adapters then get them ordered.</p>"},{"title":"Replacing PSP Super Capacitor With Cell Battery","image":"/images/previewImage.jpg","_content":"\nSo recently I built a consolized PSP (I’ll go into that in another post) however one problem with my implementation is the date and time keeps resetting. Time to see if there's anything I can do to fit that.\n\n{% fancybox /images/consolizer.jpg /images/consolizer-thumb.jpg \"PSP Consolizer\" %}\n\n<!-- more -->\n\n# The problem\n\nSo the PSP's clock is maintained by its battery however there is also a supercapacitor that keeps time too. Whilst this looks suspiciously like a cell battery it's not. According to members of the PSP Homebrew Discord (cracking place by the way), [this is the capacitor](https://uk.farnell.com/panasonic/eecen0f204ak/cap-0-2f-3-3v-double-layer-smd/dp/1305070).\n\n{% fancybox /images/before.jpg /images/before-thumb.jpg \"PSP Super Capacitor\" %}\n\nThe problem I have is rather unique though. My Consolized PSP runs without its battery. This means every time I disconnected the mains power (don't like leaving it on wasting power when not in use) the date and time are lost.\n\nI'm not sure how long the capacitor is intended to hold its charge. On mine, it resets after a few minutes. You could buy external chargers where you removed the PSP's battery and charged in them. Did Sony expect the capacitor to hold for hours whilst you charged the battery in an external charger?\n\n{% fancybox /images/batteryCharger.png \"Official Sony External Battery Charger\" %}\n\n# The Solution\n\nI figured if the purpose of the capacitor is to hold the time in between changing the PSP's battery could I not hook up a coin cell to it instead: _SPOILER ALERT_ the answer is yes.\n\nLooking at the datasheet above the capacitor is rated at 3.3v. Trouble is that is the upper limit, the PSP could run at 3v, 1.9v or 3.3v.\n\nJust so happened I was wandering around Aldi and spotted some 3v cell batteries on the last chance saloon aisle next to the tills. Figured, sod it that would be good enough.\n\n{% fancybox /images/supercapacitor.png \"Super Capacitor\" %}\n\nNext i would need to stop the PSP from attempting to charge the battery, luckily I had some spare diodes from an old electronics starter kit.\n\nSo the plan;\n\n- solder some jumper leads to the battery\n- solder a diode to stop the PSP charging the battery\n- Desolder the super capacitor\n- Solder the battery jumper leads in place\n\nEasy right?\n\n{% alert warning %}\n\n### Soldering to batteries is stupid, don't do it.\n\nYou can buy cell batteries with tabs (like for GameBoy games) or little holders. Use one of them.\n\n{% endalert %}\n\nFirstly I soldered up the battery. Using lots of flux and little contact time with the battery. Once done I wrapped it in some heat shrink.\n\n{% fancybox /images/cell.jpg /images/cell-thumb.jpg \"Soldered battery\" %}\n\nNext was soldering the diode.\n\nDiodes only allow current to flow in one direction, allowing the battery to discharge whilst preventing the PSP from charging it. Diodes incur a voltage drop across them. Measuring the battery without a load I got 3.25v, measuring with the diode I got 2.8v.\n\nDifferent diodes may be marked differently. Mine had a white band to indicate the cathode.\n\nThis is a rather crude diagram of how I wired it up.\n\n{% fancybox /images/wiring.png \"Wiring Diagram\" %}\n\nLastly, I needed to remove the old capacitor and solder in my battery.\n\nUsing the correct soldering iron tip will help a lot here. Luckily I could swap mine out for a larger tip to heat a larger area. The metal tabs of the capacitor act like heatsinks and will quickly absorb the heat.\n\nThe small pointed tips on the average soldering iron may struggle to heat the area well enough to remove the capacitor without damaging the PSP.\n\nOnce removed soldering in the battery was quite easy.\n\n{% fancybox /images/after.jpg /images/after-thumb.jpg \"Soldered battery\" %}\n\nJust like that, job done.\n\n{% alert warning %}\n\n### Overvoltage\n\nWhen I measured the PSP's super capacitor I read 1.9v. This cell is powering the PSP with 2.8v. I have no idea if my capacitor was dying and was undervolting the PSP. I could also be running it at too high a voltage which could cause long term damage. Who knows. (Probably someone, but not me)\n\n{% endalert %}\n\nI'm sure someone with more patients than me could do a much neater job but it works. I can turn off the PSP at the mains and the next day it remembers the time.\n\nI'm sure it's been worth all this effort, maybe...\n","source":"_posts/psp-coin-cell.md","raw":"---\ntitle: Replacing PSP Super Capacitor With Cell Battery\ntags: psp\nimage: /images/previewImage.jpg\n---\n\nSo recently I built a consolized PSP (I’ll go into that in another post) however one problem with my implementation is the date and time keeps resetting. Time to see if there's anything I can do to fit that.\n\n{% fancybox /images/consolizer.jpg /images/consolizer-thumb.jpg \"PSP Consolizer\" %}\n\n<!-- more -->\n\n# The problem\n\nSo the PSP's clock is maintained by its battery however there is also a supercapacitor that keeps time too. Whilst this looks suspiciously like a cell battery it's not. According to members of the PSP Homebrew Discord (cracking place by the way), [this is the capacitor](https://uk.farnell.com/panasonic/eecen0f204ak/cap-0-2f-3-3v-double-layer-smd/dp/1305070).\n\n{% fancybox /images/before.jpg /images/before-thumb.jpg \"PSP Super Capacitor\" %}\n\nThe problem I have is rather unique though. My Consolized PSP runs without its battery. This means every time I disconnected the mains power (don't like leaving it on wasting power when not in use) the date and time are lost.\n\nI'm not sure how long the capacitor is intended to hold its charge. On mine, it resets after a few minutes. You could buy external chargers where you removed the PSP's battery and charged in them. Did Sony expect the capacitor to hold for hours whilst you charged the battery in an external charger?\n\n{% fancybox /images/batteryCharger.png \"Official Sony External Battery Charger\" %}\n\n# The Solution\n\nI figured if the purpose of the capacitor is to hold the time in between changing the PSP's battery could I not hook up a coin cell to it instead: _SPOILER ALERT_ the answer is yes.\n\nLooking at the datasheet above the capacitor is rated at 3.3v. Trouble is that is the upper limit, the PSP could run at 3v, 1.9v or 3.3v.\n\nJust so happened I was wandering around Aldi and spotted some 3v cell batteries on the last chance saloon aisle next to the tills. Figured, sod it that would be good enough.\n\n{% fancybox /images/supercapacitor.png \"Super Capacitor\" %}\n\nNext i would need to stop the PSP from attempting to charge the battery, luckily I had some spare diodes from an old electronics starter kit.\n\nSo the plan;\n\n- solder some jumper leads to the battery\n- solder a diode to stop the PSP charging the battery\n- Desolder the super capacitor\n- Solder the battery jumper leads in place\n\nEasy right?\n\n{% alert warning %}\n\n### Soldering to batteries is stupid, don't do it.\n\nYou can buy cell batteries with tabs (like for GameBoy games) or little holders. Use one of them.\n\n{% endalert %}\n\nFirstly I soldered up the battery. Using lots of flux and little contact time with the battery. Once done I wrapped it in some heat shrink.\n\n{% fancybox /images/cell.jpg /images/cell-thumb.jpg \"Soldered battery\" %}\n\nNext was soldering the diode.\n\nDiodes only allow current to flow in one direction, allowing the battery to discharge whilst preventing the PSP from charging it. Diodes incur a voltage drop across them. Measuring the battery without a load I got 3.25v, measuring with the diode I got 2.8v.\n\nDifferent diodes may be marked differently. Mine had a white band to indicate the cathode.\n\nThis is a rather crude diagram of how I wired it up.\n\n{% fancybox /images/wiring.png \"Wiring Diagram\" %}\n\nLastly, I needed to remove the old capacitor and solder in my battery.\n\nUsing the correct soldering iron tip will help a lot here. Luckily I could swap mine out for a larger tip to heat a larger area. The metal tabs of the capacitor act like heatsinks and will quickly absorb the heat.\n\nThe small pointed tips on the average soldering iron may struggle to heat the area well enough to remove the capacitor without damaging the PSP.\n\nOnce removed soldering in the battery was quite easy.\n\n{% fancybox /images/after.jpg /images/after-thumb.jpg \"Soldered battery\" %}\n\nJust like that, job done.\n\n{% alert warning %}\n\n### Overvoltage\n\nWhen I measured the PSP's super capacitor I read 1.9v. This cell is powering the PSP with 2.8v. I have no idea if my capacitor was dying and was undervolting the PSP. I could also be running it at too high a voltage which could cause long term damage. Who knows. (Probably someone, but not me)\n\n{% endalert %}\n\nI'm sure someone with more patients than me could do a much neater job but it works. I can turn off the PSP at the mains and the next day it remembers the time.\n\nI'm sure it's been worth all this effort, maybe...\n","slug":"psp-coin-cell","published":1,"date":"2022-11-30T09:34:18.861Z","updated":"2022-12-05T09:53:28.917Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cliea35bt000hmkue4v2i2yut","content":"<p>So recently I built a consolized PSP (I’ll go into that in another post) however one problem with my implementation is the date and time keeps resetting. Time to see if there’s anything I can do to fit that.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer.jpg\"\n    title=\"PSP Consolizer\"\n  >\n    <img\n      src=\"/images/consolizer-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"PSP Consolizer\" />\n  </a>\n\n  <span class=\"caption \">\n    PSP Consolizer\n  </span>\n\n\n<span id=\"more\"></span>\n\n<h1 id=\"The-problem\"><a href=\"#The-problem\" class=\"headerlink\" title=\"The problem\"></a>The problem</h1><p>So the PSP’s clock is maintained by its battery however there is also a supercapacitor that keeps time too. Whilst this looks suspiciously like a cell battery it’s not. According to members of the PSP Homebrew Discord (cracking place by the way), <a href=\"https://uk.farnell.com/panasonic/eecen0f204ak/cap-0-2f-3-3v-double-layer-smd/dp/1305070\">this is the capacitor</a>.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/before.jpg\"\n    title=\"PSP Super Capacitor\"\n  >\n    <img\n      src=\"/images/before-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"PSP Super Capacitor\" />\n  </a>\n\n  <span class=\"caption \">\n    PSP Super Capacitor\n  </span>\n\n\n<p>The problem I have is rather unique though. My Consolized PSP runs without its battery. This means every time I disconnected the mains power (don’t like leaving it on wasting power when not in use) the date and time are lost.</p>\n<p>I’m not sure how long the capacitor is intended to hold its charge. On mine, it resets after a few minutes. You could buy external chargers where you removed the PSP’s battery and charged in them. Did Sony expect the capacitor to hold for hours whilst you charged the battery in an external charger?</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/batteryCharger.png\"\n    title=\"Official Sony External Battery Charger\"\n  >\n    <img\n      src=\"/images/batteryCharger.png\"\n      style=\"max-width: 300px\"\n      alt=\"Official Sony External Battery Charger\" />\n  </a>\n\n  <span class=\"caption \">\n    Official Sony External Battery Charger\n  </span>\n\n\n<h1 id=\"The-Solution\"><a href=\"#The-Solution\" class=\"headerlink\" title=\"The Solution\"></a>The Solution</h1><p>I figured if the purpose of the capacitor is to hold the time in between changing the PSP’s battery could I not hook up a coin cell to it instead: <em>SPOILER ALERT</em> the answer is yes.</p>\n<p>Looking at the datasheet above the capacitor is rated at 3.3v. Trouble is that is the upper limit, the PSP could run at 3v, 1.9v or 3.3v.</p>\n<p>Just so happened I was wandering around Aldi and spotted some 3v cell batteries on the last chance saloon aisle next to the tills. Figured, sod it that would be good enough.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/supercapacitor.png\"\n    title=\"Super Capacitor\"\n  >\n    <img\n      src=\"/images/supercapacitor.png\"\n      style=\"max-width: 300px\"\n      alt=\"Super Capacitor\" />\n  </a>\n\n  <span class=\"caption \">\n    Super Capacitor\n  </span>\n\n\n<p>Next i would need to stop the PSP from attempting to charge the battery, luckily I had some spare diodes from an old electronics starter kit.</p>\n<p>So the plan;</p>\n<ul>\n<li>solder some jumper leads to the battery</li>\n<li>solder a diode to stop the PSP charging the battery</li>\n<li>Desolder the super capacitor</li>\n<li>Solder the battery jumper leads in place</li>\n</ul>\n<p>Easy right?</p>\n<div class=\"alert alert-warning\">\n      <h3 id=\"Soldering-to-batteries-is-stupid-don’t-do-it\"><a href=\"#Soldering-to-batteries-is-stupid-don’t-do-it\" class=\"headerlink\" title=\"Soldering to batteries is stupid, don’t do it.\"></a>Soldering to batteries is stupid, don’t do it.</h3><p>You can buy cell batteries with tabs (like for GameBoy games) or little holders. Use one of them.</p>\n\n      </div>\n\n<p>Firstly I soldered up the battery. Using lots of flux and little contact time with the battery. Once done I wrapped it in some heat shrink.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/cell.jpg\"\n    title=\"Soldered battery\"\n  >\n    <img\n      src=\"/images/cell-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Soldered battery\" />\n  </a>\n\n  <span class=\"caption \">\n    Soldered battery\n  </span>\n\n\n<p>Next was soldering the diode.</p>\n<p>Diodes only allow current to flow in one direction, allowing the battery to discharge whilst preventing the PSP from charging it. Diodes incur a voltage drop across them. Measuring the battery without a load I got 3.25v, measuring with the diode I got 2.8v.</p>\n<p>Different diodes may be marked differently. Mine had a white band to indicate the cathode.</p>\n<p>This is a rather crude diagram of how I wired it up.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/wiring.png\"\n    title=\"Wiring Diagram\"\n  >\n    <img\n      src=\"/images/wiring.png\"\n      style=\"max-width: 300px\"\n      alt=\"Wiring Diagram\" />\n  </a>\n\n  <span class=\"caption \">\n    Wiring Diagram\n  </span>\n\n\n<p>Lastly, I needed to remove the old capacitor and solder in my battery.</p>\n<p>Using the correct soldering iron tip will help a lot here. Luckily I could swap mine out for a larger tip to heat a larger area. The metal tabs of the capacitor act like heatsinks and will quickly absorb the heat.</p>\n<p>The small pointed tips on the average soldering iron may struggle to heat the area well enough to remove the capacitor without damaging the PSP.</p>\n<p>Once removed soldering in the battery was quite easy.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/after.jpg\"\n    title=\"Soldered battery\"\n  >\n    <img\n      src=\"/images/after-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Soldered battery\" />\n  </a>\n\n  <span class=\"caption \">\n    Soldered battery\n  </span>\n\n\n<p>Just like that, job done.</p>\n<div class=\"alert alert-warning\">\n      <h3 id=\"Overvoltage\"><a href=\"#Overvoltage\" class=\"headerlink\" title=\"Overvoltage\"></a>Overvoltage</h3><p>When I measured the PSP’s super capacitor I read 1.9v. This cell is powering the PSP with 2.8v. I have no idea if my capacitor was dying and was undervolting the PSP. I could also be running it at too high a voltage which could cause long term damage. Who knows. (Probably someone, but not me)</p>\n\n      </div>\n\n<p>I’m sure someone with more patients than me could do a much neater job but it works. I can turn off the PSP at the mains and the next day it remembers the time.</p>\n<p>I’m sure it’s been worth all this effort, maybe…</p>\n","site":{"data":{}},"excerpt":"<p>So recently I built a consolized PSP (I’ll go into that in another post) however one problem with my implementation is the date and time keeps resetting. Time to see if there’s anything I can do to fit that.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/consolizer.jpg\"\n    title=\"PSP Consolizer\"\n  >\n    <img\n      src=\"/images/consolizer-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"PSP Consolizer\" />\n  </a>\n\n  <span class=\"caption \">\n    PSP Consolizer\n  </span>","more":"<h1 id=\"The-problem\"><a href=\"#The-problem\" class=\"headerlink\" title=\"The problem\"></a>The problem</h1><p>So the PSP’s clock is maintained by its battery however there is also a supercapacitor that keeps time too. Whilst this looks suspiciously like a cell battery it’s not. According to members of the PSP Homebrew Discord (cracking place by the way), <a href=\"https://uk.farnell.com/panasonic/eecen0f204ak/cap-0-2f-3-3v-double-layer-smd/dp/1305070\">this is the capacitor</a>.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/before.jpg\"\n    title=\"PSP Super Capacitor\"\n  >\n    <img\n      src=\"/images/before-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"PSP Super Capacitor\" />\n  </a>\n\n  <span class=\"caption \">\n    PSP Super Capacitor\n  </span>\n\n\n<p>The problem I have is rather unique though. My Consolized PSP runs without its battery. This means every time I disconnected the mains power (don’t like leaving it on wasting power when not in use) the date and time are lost.</p>\n<p>I’m not sure how long the capacitor is intended to hold its charge. On mine, it resets after a few minutes. You could buy external chargers where you removed the PSP’s battery and charged in them. Did Sony expect the capacitor to hold for hours whilst you charged the battery in an external charger?</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/batteryCharger.png\"\n    title=\"Official Sony External Battery Charger\"\n  >\n    <img\n      src=\"/images/batteryCharger.png\"\n      style=\"max-width: 300px\"\n      alt=\"Official Sony External Battery Charger\" />\n  </a>\n\n  <span class=\"caption \">\n    Official Sony External Battery Charger\n  </span>\n\n\n<h1 id=\"The-Solution\"><a href=\"#The-Solution\" class=\"headerlink\" title=\"The Solution\"></a>The Solution</h1><p>I figured if the purpose of the capacitor is to hold the time in between changing the PSP’s battery could I not hook up a coin cell to it instead: <em>SPOILER ALERT</em> the answer is yes.</p>\n<p>Looking at the datasheet above the capacitor is rated at 3.3v. Trouble is that is the upper limit, the PSP could run at 3v, 1.9v or 3.3v.</p>\n<p>Just so happened I was wandering around Aldi and spotted some 3v cell batteries on the last chance saloon aisle next to the tills. Figured, sod it that would be good enough.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/supercapacitor.png\"\n    title=\"Super Capacitor\"\n  >\n    <img\n      src=\"/images/supercapacitor.png\"\n      style=\"max-width: 300px\"\n      alt=\"Super Capacitor\" />\n  </a>\n\n  <span class=\"caption \">\n    Super Capacitor\n  </span>\n\n\n<p>Next i would need to stop the PSP from attempting to charge the battery, luckily I had some spare diodes from an old electronics starter kit.</p>\n<p>So the plan;</p>\n<ul>\n<li>solder some jumper leads to the battery</li>\n<li>solder a diode to stop the PSP charging the battery</li>\n<li>Desolder the super capacitor</li>\n<li>Solder the battery jumper leads in place</li>\n</ul>\n<p>Easy right?</p>\n<div class=\"alert alert-warning\">\n      <h3 id=\"Soldering-to-batteries-is-stupid-don’t-do-it\"><a href=\"#Soldering-to-batteries-is-stupid-don’t-do-it\" class=\"headerlink\" title=\"Soldering to batteries is stupid, don’t do it.\"></a>Soldering to batteries is stupid, don’t do it.</h3><p>You can buy cell batteries with tabs (like for GameBoy games) or little holders. Use one of them.</p>\n\n      </div>\n\n<p>Firstly I soldered up the battery. Using lots of flux and little contact time with the battery. Once done I wrapped it in some heat shrink.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/cell.jpg\"\n    title=\"Soldered battery\"\n  >\n    <img\n      src=\"/images/cell-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Soldered battery\" />\n  </a>\n\n  <span class=\"caption \">\n    Soldered battery\n  </span>\n\n\n<p>Next was soldering the diode.</p>\n<p>Diodes only allow current to flow in one direction, allowing the battery to discharge whilst preventing the PSP from charging it. Diodes incur a voltage drop across them. Measuring the battery without a load I got 3.25v, measuring with the diode I got 2.8v.</p>\n<p>Different diodes may be marked differently. Mine had a white band to indicate the cathode.</p>\n<p>This is a rather crude diagram of how I wired it up.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/wiring.png\"\n    title=\"Wiring Diagram\"\n  >\n    <img\n      src=\"/images/wiring.png\"\n      style=\"max-width: 300px\"\n      alt=\"Wiring Diagram\" />\n  </a>\n\n  <span class=\"caption \">\n    Wiring Diagram\n  </span>\n\n\n<p>Lastly, I needed to remove the old capacitor and solder in my battery.</p>\n<p>Using the correct soldering iron tip will help a lot here. Luckily I could swap mine out for a larger tip to heat a larger area. The metal tabs of the capacitor act like heatsinks and will quickly absorb the heat.</p>\n<p>The small pointed tips on the average soldering iron may struggle to heat the area well enough to remove the capacitor without damaging the PSP.</p>\n<p>Once removed soldering in the battery was quite easy.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/after.jpg\"\n    title=\"Soldered battery\"\n  >\n    <img\n      src=\"/images/after-thumb.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"Soldered battery\" />\n  </a>\n\n  <span class=\"caption \">\n    Soldered battery\n  </span>\n\n\n<p>Just like that, job done.</p>\n<div class=\"alert alert-warning\">\n      <h3 id=\"Overvoltage\"><a href=\"#Overvoltage\" class=\"headerlink\" title=\"Overvoltage\"></a>Overvoltage</h3><p>When I measured the PSP’s super capacitor I read 1.9v. This cell is powering the PSP with 2.8v. I have no idea if my capacitor was dying and was undervolting the PSP. I could also be running it at too high a voltage which could cause long term damage. Who knows. (Probably someone, but not me)</p>\n\n      </div>\n\n<p>I’m sure someone with more patients than me could do a much neater job but it works. I can turn off the PSP at the mains and the next day it remembers the time.</p>\n<p>I’m sure it’s been worth all this effort, maybe…</p>"},{"title":"Continuing the PSP Consolizer Project","_content":"\nI’ve spent a few months working on other projects but now it's time to return to my PSP-Consolizer project with some cool new ideas.\n\n<!-- more -->\n\nIn some of my older posts i was trying to figure out how to fit the PSP-Consolizer inside the psp, with little luck. This left me feeling somewhat demotivated (and skint) so I put this project down for a while.\n\nIn the meantime, I worked adding Aux Audio support to the great VitaDock+ project, I have a few Pull Requests for this project you can see [here](https://github.com/SilentNightx/VitaDockPlus/pulls).\n\nIf you interested in using them i wrote a {% post_link VitaDock-Manually-Apply-Aux-Audio-Feature 'post, viewable here' %} going through manually applying those changes.\n\nAnyway, after a number of people have shown interest in the PSP-Consolizer I’ve got a new sense excitement for this project and I'm back working on it!\n\n# I'm not alone\n\nDuring this project I’ve had support from a member of the PSP Discord called `Peter Lustig`. Without the help of this person I don't think the project would have made it this far and certainly wouldn't be able to support the PSP-3000. I just wanted to give credit for the brilliant help they have offered, this is a joint project, and they deserve the credit too.\n\n# So what’s new?\n\nThe two main new developments are targeting the ESP32 and affordable FPC manufacturing.\n\n### ESP32\n\nMy consolizer previously targeted the Arduino nano 33 IOT. I have used Arduino's in the past and not having much embedded programming experience chose to stick with what I new. Trouble was the Nano was expensive and limited compared to the ESP. So, after a few people asking I decided to make the switch. So far i have the PSP-Consolizer code compiled and running on the ESP, however I am yet to test it.\n\n{% fancybox /images/continuing-psp-consolizer/esp.jpg  \"ESP32 running initial tests\" %}\n\nBut lower cost is only one benefit, the ESP allows for things such as Over The Air (OTA) updates, flash storage (saving user made button configurations) and the ability to connect wirelessly with the ESP. We could build, like the BlueRetro project, some web app which can allow you to configure the ESP and build custom button mapping etc.\n\n### Affordable FPC manufacturing\n\nOne of the other big changes is JLCPCB now offer low cost FPC production.\n\nIf you read a previous {% post_link PSP-Internal-Consolizer-Fitting-FPCs 'post on designing custom FPC\\'s' %} to make the consolizer internal you may remember the cost issue. I think the cheapest i could find for a single small FPC (the PSP would need at least two) was £60+. Far too expensive and somewhat nuked that idea.\n\nI recently noticed JLCPCB now offer FPC manufacturing and the same custom FPC that would have cost £60+ now would cost £16. Its crazy the price difference but it now makes this entire project possible.\n\nSo the plan is to design a single custom FPC which can replace all the internal buttons on the PSP and allow be to tap into those signals. This would mean an internal PSP consolizer is possible and would be solderless (at least on the PSP itself).\n\n# To finish up\n\nSo this is still early days, I’ve only been at it a day or two. However, its exciting and we should hopefully be back on track to build some cool things!\n","source":"_posts/continuing-the-psp-consolizer-project.md","raw":"---\ntitle: Continuing the PSP Consolizer Project\ntags:\n  - psp\n  - psp-consolizer\n---\n\nI’ve spent a few months working on other projects but now it's time to return to my PSP-Consolizer project with some cool new ideas.\n\n<!-- more -->\n\nIn some of my older posts i was trying to figure out how to fit the PSP-Consolizer inside the psp, with little luck. This left me feeling somewhat demotivated (and skint) so I put this project down for a while.\n\nIn the meantime, I worked adding Aux Audio support to the great VitaDock+ project, I have a few Pull Requests for this project you can see [here](https://github.com/SilentNightx/VitaDockPlus/pulls).\n\nIf you interested in using them i wrote a {% post_link VitaDock-Manually-Apply-Aux-Audio-Feature 'post, viewable here' %} going through manually applying those changes.\n\nAnyway, after a number of people have shown interest in the PSP-Consolizer I’ve got a new sense excitement for this project and I'm back working on it!\n\n# I'm not alone\n\nDuring this project I’ve had support from a member of the PSP Discord called `Peter Lustig`. Without the help of this person I don't think the project would have made it this far and certainly wouldn't be able to support the PSP-3000. I just wanted to give credit for the brilliant help they have offered, this is a joint project, and they deserve the credit too.\n\n# So what’s new?\n\nThe two main new developments are targeting the ESP32 and affordable FPC manufacturing.\n\n### ESP32\n\nMy consolizer previously targeted the Arduino nano 33 IOT. I have used Arduino's in the past and not having much embedded programming experience chose to stick with what I new. Trouble was the Nano was expensive and limited compared to the ESP. So, after a few people asking I decided to make the switch. So far i have the PSP-Consolizer code compiled and running on the ESP, however I am yet to test it.\n\n{% fancybox /images/continuing-psp-consolizer/esp.jpg  \"ESP32 running initial tests\" %}\n\nBut lower cost is only one benefit, the ESP allows for things such as Over The Air (OTA) updates, flash storage (saving user made button configurations) and the ability to connect wirelessly with the ESP. We could build, like the BlueRetro project, some web app which can allow you to configure the ESP and build custom button mapping etc.\n\n### Affordable FPC manufacturing\n\nOne of the other big changes is JLCPCB now offer low cost FPC production.\n\nIf you read a previous {% post_link PSP-Internal-Consolizer-Fitting-FPCs 'post on designing custom FPC\\'s' %} to make the consolizer internal you may remember the cost issue. I think the cheapest i could find for a single small FPC (the PSP would need at least two) was £60+. Far too expensive and somewhat nuked that idea.\n\nI recently noticed JLCPCB now offer FPC manufacturing and the same custom FPC that would have cost £60+ now would cost £16. Its crazy the price difference but it now makes this entire project possible.\n\nSo the plan is to design a single custom FPC which can replace all the internal buttons on the PSP and allow be to tap into those signals. This would mean an internal PSP consolizer is possible and would be solderless (at least on the PSP itself).\n\n# To finish up\n\nSo this is still early days, I’ve only been at it a day or two. However, its exciting and we should hopefully be back on track to build some cool things!\n","slug":"continuing-the-psp-consolizer-project","published":1,"date":"2023-06-02T08:02:14.127Z","updated":"2023-06-02T08:32:26.049Z","_id":"clieaaihn000umkue41td1xgr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>I’ve spent a few months working on other projects but now it’s time to return to my PSP-Consolizer project with some cool new ideas.</p>\n<span id=\"more\"></span>\n\n<p>In some of my older posts i was trying to figure out how to fit the PSP-Consolizer inside the psp, with little luck. This left me feeling somewhat demotivated (and skint) so I put this project down for a while.</p>\n<p>In the meantime, I worked adding Aux Audio support to the great VitaDock+ project, I have a few Pull Requests for this project you can see <a href=\"https://github.com/SilentNightx/VitaDockPlus/pulls\">here</a>.</p>\n<p>If you interested in using them i wrote a <a href=\"/12/05/2023/VitaDock-Manually-Apply-Aux-Audio-Feature/\" title=\"post, viewable here\">post, viewable here</a> going through manually applying those changes.</p>\n<p>Anyway, after a number of people have shown interest in the PSP-Consolizer I’ve got a new sense excitement for this project and I’m back working on it!</p>\n<h1 id=\"I’m-not-alone\"><a href=\"#I’m-not-alone\" class=\"headerlink\" title=\"I’m not alone\"></a>I’m not alone</h1><p>During this project I’ve had support from a member of the PSP Discord called <code>Peter Lustig</code>. Without the help of this person I don’t think the project would have made it this far and certainly wouldn’t be able to support the PSP-3000. I just wanted to give credit for the brilliant help they have offered, this is a joint project, and they deserve the credit too.</p>\n<h1 id=\"So-what’s-new\"><a href=\"#So-what’s-new\" class=\"headerlink\" title=\"So what’s new?\"></a>So what’s new?</h1><p>The two main new developments are targeting the ESP32 and affordable FPC manufacturing.</p>\n<h3 id=\"ESP32\"><a href=\"#ESP32\" class=\"headerlink\" title=\"ESP32\"></a>ESP32</h3><p>My consolizer previously targeted the Arduino nano 33 IOT. I have used Arduino’s in the past and not having much embedded programming experience chose to stick with what I new. Trouble was the Nano was expensive and limited compared to the ESP. So, after a few people asking I decided to make the switch. So far i have the PSP-Consolizer code compiled and running on the ESP, however I am yet to test it.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/continuing-psp-consolizer/esp.jpg\"\n    title=\"ESP32 running initial tests\"\n  >\n    <img\n      src=\"/images/continuing-psp-consolizer/esp.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"ESP32 running initial tests\" />\n  </a>\n\n  <span class=\"caption \">\n    ESP32 running initial tests\n  </span>\n\n\n<p>But lower cost is only one benefit, the ESP allows for things such as Over The Air (OTA) updates, flash storage (saving user made button configurations) and the ability to connect wirelessly with the ESP. We could build, like the BlueRetro project, some web app which can allow you to configure the ESP and build custom button mapping etc.</p>\n<h3 id=\"Affordable-FPC-manufacturing\"><a href=\"#Affordable-FPC-manufacturing\" class=\"headerlink\" title=\"Affordable FPC manufacturing\"></a>Affordable FPC manufacturing</h3><p>One of the other big changes is JLCPCB now offer low cost FPC production.</p>\n<p>If you read a previous <a href=\"/08/01/2023/PSP-Internal-Consolizer-Fitting-FPCs/\" title=\"post on designing custom FPC&#39;s\">post on designing custom FPC&#39;s</a> to make the consolizer internal you may remember the cost issue. I think the cheapest i could find for a single small FPC (the PSP would need at least two) was £60+. Far too expensive and somewhat nuked that idea.</p>\n<p>I recently noticed JLCPCB now offer FPC manufacturing and the same custom FPC that would have cost £60+ now would cost £16. Its crazy the price difference but it now makes this entire project possible.</p>\n<p>So the plan is to design a single custom FPC which can replace all the internal buttons on the PSP and allow be to tap into those signals. This would mean an internal PSP consolizer is possible and would be solderless (at least on the PSP itself).</p>\n<h1 id=\"To-finish-up\"><a href=\"#To-finish-up\" class=\"headerlink\" title=\"To finish up\"></a>To finish up</h1><p>So this is still early days, I’ve only been at it a day or two. However, its exciting and we should hopefully be back on track to build some cool things!</p>\n","site":{"data":{}},"excerpt":"<p>I’ve spent a few months working on other projects but now it’s time to return to my PSP-Consolizer project with some cool new ideas.</p>","more":"<p>In some of my older posts i was trying to figure out how to fit the PSP-Consolizer inside the psp, with little luck. This left me feeling somewhat demotivated (and skint) so I put this project down for a while.</p>\n<p>In the meantime, I worked adding Aux Audio support to the great VitaDock+ project, I have a few Pull Requests for this project you can see <a href=\"https://github.com/SilentNightx/VitaDockPlus/pulls\">here</a>.</p>\n<p>If you interested in using them i wrote a <a href=\"/12/05/2023/VitaDock-Manually-Apply-Aux-Audio-Feature/\" title=\"post, viewable here\">post, viewable here</a> going through manually applying those changes.</p>\n<p>Anyway, after a number of people have shown interest in the PSP-Consolizer I’ve got a new sense excitement for this project and I’m back working on it!</p>\n<h1 id=\"I’m-not-alone\"><a href=\"#I’m-not-alone\" class=\"headerlink\" title=\"I’m not alone\"></a>I’m not alone</h1><p>During this project I’ve had support from a member of the PSP Discord called <code>Peter Lustig</code>. Without the help of this person I don’t think the project would have made it this far and certainly wouldn’t be able to support the PSP-3000. I just wanted to give credit for the brilliant help they have offered, this is a joint project, and they deserve the credit too.</p>\n<h1 id=\"So-what’s-new\"><a href=\"#So-what’s-new\" class=\"headerlink\" title=\"So what’s new?\"></a>So what’s new?</h1><p>The two main new developments are targeting the ESP32 and affordable FPC manufacturing.</p>\n<h3 id=\"ESP32\"><a href=\"#ESP32\" class=\"headerlink\" title=\"ESP32\"></a>ESP32</h3><p>My consolizer previously targeted the Arduino nano 33 IOT. I have used Arduino’s in the past and not having much embedded programming experience chose to stick with what I new. Trouble was the Nano was expensive and limited compared to the ESP. So, after a few people asking I decided to make the switch. So far i have the PSP-Consolizer code compiled and running on the ESP, however I am yet to test it.</p>\n\n  <a class=\"fancybox\" \n    href=\"/images/continuing-psp-consolizer/esp.jpg\"\n    title=\"ESP32 running initial tests\"\n  >\n    <img\n      src=\"/images/continuing-psp-consolizer/esp.jpg\"\n      style=\"max-width: 300px\"\n      alt=\"ESP32 running initial tests\" />\n  </a>\n\n  <span class=\"caption \">\n    ESP32 running initial tests\n  </span>\n\n\n<p>But lower cost is only one benefit, the ESP allows for things such as Over The Air (OTA) updates, flash storage (saving user made button configurations) and the ability to connect wirelessly with the ESP. We could build, like the BlueRetro project, some web app which can allow you to configure the ESP and build custom button mapping etc.</p>\n<h3 id=\"Affordable-FPC-manufacturing\"><a href=\"#Affordable-FPC-manufacturing\" class=\"headerlink\" title=\"Affordable FPC manufacturing\"></a>Affordable FPC manufacturing</h3><p>One of the other big changes is JLCPCB now offer low cost FPC production.</p>\n<p>If you read a previous <a href=\"/08/01/2023/PSP-Internal-Consolizer-Fitting-FPCs/\" title=\"post on designing custom FPC&#39;s\">post on designing custom FPC&#39;s</a> to make the consolizer internal you may remember the cost issue. I think the cheapest i could find for a single small FPC (the PSP would need at least two) was £60+. Far too expensive and somewhat nuked that idea.</p>\n<p>I recently noticed JLCPCB now offer FPC manufacturing and the same custom FPC that would have cost £60+ now would cost £16. Its crazy the price difference but it now makes this entire project possible.</p>\n<p>So the plan is to design a single custom FPC which can replace all the internal buttons on the PSP and allow be to tap into those signals. This would mean an internal PSP consolizer is possible and would be solderless (at least on the PSP itself).</p>\n<h1 id=\"To-finish-up\"><a href=\"#To-finish-up\" class=\"headerlink\" title=\"To finish up\"></a>To finish up</h1><p>So this is still early days, I’ve only been at it a day or two. However, its exciting and we should hopefully be back on track to build some cool things!</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cliea35bg0001mkuehk57dixq","tag_id":"cliea35bm0003mkuefqc82ua1","_id":"cliea35bq0008mkue1kdq9ahq"},{"post_id":"cliea35bg0001mkuehk57dixq","tag_id":"cliea35bp0006mkuee5otefip","_id":"cliea35bq0009mkueby10allk"},{"post_id":"cliea35bn0004mkue70b054jb","tag_id":"cliea35bp0007mkue14dseg4n","_id":"cliea35br000bmkue1u131scw"},{"post_id":"cliea35bo0005mkue2w2g2afw","tag_id":"cliea35bm0003mkuefqc82ua1","_id":"cliea35br000cmkue36ay1ih7"},{"post_id":"cliea35bo0005mkue2w2g2afw","tag_id":"cliea35bp0006mkuee5otefip","_id":"cliea35br000dmkue6644g6x1"},{"post_id":"cliea35bs000fmkue9uhzhz8r","tag_id":"cliea35bm0003mkuefqc82ua1","_id":"cliea35bu000imkue5oabh4lx"},{"post_id":"cliea35bs000fmkue9uhzhz8r","tag_id":"cliea35bp0006mkuee5otefip","_id":"cliea35bu000jmkuebp4yeegq"},{"post_id":"cliea35bt000hmkue4v2i2yut","tag_id":"cliea35bm0003mkuefqc82ua1","_id":"cliea35bv000lmkueayr85wn7"},{"post_id":"cliea35bs000emkuebghoh77l","tag_id":"cliea35bt000gmkue5lzz7ngx","_id":"cliea35bv000mmkueex9fe632"},{"post_id":"cliea35bs000emkuebghoh77l","tag_id":"cliea35bu000kmkue9o7n3jo0","_id":"cliea35bv000nmkue6c6zbwsh"},{"post_id":"clieaaihn000umkue41td1xgr","tag_id":"cliea35bm0003mkuefqc82ua1","_id":"clieaaihp000vmkuebzsgdbd7"},{"post_id":"clieaaihn000umkue41td1xgr","tag_id":"cliea35bp0006mkuee5otefip","_id":"clieaaihp000wmkueg7lf40ww"}],"Tag":[{"name":"psp","_id":"cliea35bm0003mkuefqc82ua1"},{"name":"psp-consolizer","_id":"cliea35bp0006mkuee5otefip"},{"name":"3DS","_id":"cliea35bp0007mkue14dseg4n"},{"name":"PSVita","_id":"cliea35bt000gmkue5lzz7ngx"},{"name":"VitaDock+","_id":"cliea35bu000kmkue9o7n3jo0"},{"name":"PSP","_id":"cliea5c2g000qmkue9cukb398"}]}}